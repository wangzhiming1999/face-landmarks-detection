{"id":"node_modules/@tensorflow/tfjs-backend-webgl/dist/complex_abs_gpu.js","dependencies":[{"name":"/mnt/package.json","includedInParent":true,"mtime":1677116220762},{"name":"/mnt/.babelrc","includedInParent":true,"mtime":1677077576810},{"name":"/mnt/node_modules/@tensorflow/tfjs-backend-webgl/package.json","includedInParent":true,"mtime":1677116170324}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ComplexAbsProgram = void 0;\n\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nclass ComplexAbsProgram {\n  constructor(shape) {\n    this.variableNames = ['real', 'imag'];\n    this.outputShape = shape;\n    this.userCode = `\n      void main() {\n        float re = abs(getRealAtOutCoords());\n        float im = abs(getImagAtOutCoords());\n        float mx = max(re, im);\n\n        // sadly the length function in glsl is not underflow-safe\n        // (at least not on Intel GPUs). So the safe solution is\n        // to ensure underflow-safety in all cases.\n        setOutput(\n          mx == 0.0 ? 0.0 : mx * length(vec2(1, min(re, im)/mx))\n        );\n      }\n    `;\n  }\n\n}\n\nexports.ComplexAbsProgram = ComplexAbsProgram;"},"sourceMaps":{"js":{"mappings":[{"source":"../../../../../tfjs-backend-webgl/src/complex_abs_gpu.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":8,"column":0}},{"source":"../../../../../tfjs-backend-webgl/src/complex_abs_gpu.ts","name":null,"original":{"line":20,"column":6},"generated":{"line":24,"column":0}},{"source":"../../../../../tfjs-backend-webgl/src/complex_abs_gpu.ts","name":null,"original":{"line":20,"column":13},"generated":{"line":24,"column":6}},{"source":"../../../../../tfjs-backend-webgl/src/complex_abs_gpu.ts","name":null,"original":{"line":20,"column":6},"generated":{"line":24,"column":23}},{"source":"../../../../../tfjs-backend-webgl/src/complex_abs_gpu.ts","name":null,"original":{"line":20,"column":30},"generated":{"line":24,"column":24}},{"source":"../../../../../tfjs-backend-webgl/src/complex_abs_gpu.ts","name":null,"original":{"line":25,"column":2},"generated":{"line":25,"column":0}},{"source":"../../../../../tfjs-backend-webgl/src/complex_abs_gpu.ts","name":null,"original":{"line":25,"column":2},"generated":{"line":25,"column":2}},{"source":"../../../../../tfjs-backend-webgl/src/complex_abs_gpu.ts","name":null,"original":{"line":25,"column":2},"generated":{"line":25,"column":13}},{"source":"../../../../../tfjs-backend-webgl/src/complex_abs_gpu.ts","name":null,"original":{"line":25,"column":14},"generated":{"line":25,"column":14}},{"source":"../../../../../tfjs-backend-webgl/src/complex_abs_gpu.ts","name":null,"original":{"line":25,"column":2},"generated":{"line":25,"column":19}},{"source":"../../../../../tfjs-backend-webgl/src/complex_abs_gpu.ts","name":null,"original":{"line":25,"column":29},"generated":{"line":25,"column":21}},{"source":"../../../../../tfjs-backend-webgl/src/complex_abs_gpu.ts","name":null,"original":{"line":21,"column":2},"generated":{"line":26,"column":0}},{"source":"../../../../../tfjs-backend-webgl/src/complex_abs_gpu.ts","name":null,"original":{"line":21,"column":2},"generated":{"line":26,"column":9}},{"source":"../../../../../tfjs-backend-webgl/src/complex_abs_gpu.ts","name":null,"original":{"line":21,"column":2},"generated":{"line":26,"column":22}},{"source":"../../../../../tfjs-backend-webgl/src/complex_abs_gpu.ts","name":null,"original":{"line":21,"column":18},"generated":{"line":26,"column":25}},{"source":"../../../../../tfjs-backend-webgl/src/complex_abs_gpu.ts","name":null,"original":{"line":21,"column":19},"generated":{"line":26,"column":26}},{"source":"../../../../../tfjs-backend-webgl/src/complex_abs_gpu.ts","name":null,"original":{"line":21,"column":18},"generated":{"line":26,"column":32}},{"source":"../../../../../tfjs-backend-webgl/src/complex_abs_gpu.ts","name":null,"original":{"line":21,"column":27},"generated":{"line":26,"column":34}},{"source":"../../../../../tfjs-backend-webgl/src/complex_abs_gpu.ts","name":null,"original":{"line":21,"column":18},"generated":{"line":26,"column":40}},{"source":"../../../../../tfjs-backend-webgl/src/complex_abs_gpu.ts","name":null,"original":{"line":21,"column":2},"generated":{"line":26,"column":41}},{"source":"../../../../../tfjs-backend-webgl/src/complex_abs_gpu.ts","name":null,"original":{"line":26,"column":4},"generated":{"line":27,"column":0}},{"source":"../../../../../tfjs-backend-webgl/src/complex_abs_gpu.ts","name":null,"original":{"line":26,"column":9},"generated":{"line":27,"column":9}},{"source":"../../../../../tfjs-backend-webgl/src/complex_abs_gpu.ts","name":null,"original":{"line":26,"column":4},"generated":{"line":27,"column":20}},{"source":"../../../../../tfjs-backend-webgl/src/complex_abs_gpu.ts","name":null,"original":{"line":26,"column":23},"generated":{"line":27,"column":23}},{"source":"../../../../../tfjs-backend-webgl/src/complex_abs_gpu.ts","name":null,"original":{"line":26,"column":4},"generated":{"line":27,"column":28}},{"source":"../../../../../tfjs-backend-webgl/src/complex_abs_gpu.ts","name":null,"original":{"line":27,"column":4},"generated":{"line":28,"column":0}},{"source":"../../../../../tfjs-backend-webgl/src/complex_abs_gpu.ts","name":null,"original":{"line":27,"column":9},"generated":{"line":28,"column":9}},{"source":"../../../../../tfjs-backend-webgl/src/complex_abs_gpu.ts","name":null,"original":{"line":27,"column":4},"generated":{"line":28,"column":17}},{"source":"../../../../../tfjs-backend-webgl/src/complex_abs_gpu.ts","name":null,"original":{"line":27,"column":20},"generated":{"line":28,"column":20}},{"source":"../../../../../tfjs-backend-webgl/src/complex_abs_gpu.ts","name":null,"original":{"line":27,"column":4},"generated":{"line":41,"column":5}},{"source":"../../../../../tfjs-backend-webgl/src/complex_abs_gpu.ts","name":null,"original":{"line":41,"column":3},"generated":{"line":42,"column":0}},{"source":"../../../../../tfjs-backend-webgl/src/complex_abs_gpu.ts","name":null,"original":{"line":20,"column":30},"generated":{"line":44,"column":0}}],"sources":{"../../../../../tfjs-backend-webgl/src/complex_abs_gpu.ts":"/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {GPGPUProgram} from './gpgpu_math';\n\nexport class ComplexAbsProgram implements GPGPUProgram {\n  variableNames = ['real', 'imag'];\n  userCode: string;\n  outputShape: number[];\n\n  constructor(shape: number[]) {\n    this.outputShape = shape;\n    this.userCode = `\n      void main() {\n        float re = abs(getRealAtOutCoords());\n        float im = abs(getImagAtOutCoords());\n        float mx = max(re, im);\n\n        // sadly the length function in glsl is not underflow-safe\n        // (at least not on Intel GPUs). So the safe solution is\n        // to ensure underflow-safety in all cases.\n        setOutput(\n          mx == 0.0 ? 0.0 : mx * length(vec2(1, min(re, im)/mx))\n        );\n      }\n    `;\n  }\n}\n"},"lineCount":null}},"error":null,"hash":"cfc7b8dadb15f2001891d5914fd79ac3","cacheData":{"env":{}}}