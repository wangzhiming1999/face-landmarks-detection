{"id":"node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/FloorDiv.js","dependencies":[{"name":"/mnt/package.json","includedInParent":true,"mtime":1677116220762},{"name":"/mnt/.babelrc","includedInParent":true,"mtime":1677077576810},{"name":"/mnt/node_modules/@tensorflow/tfjs-backend-webgl/package.json","includedInParent":true,"mtime":1677116170324},{"name":"@tensorflow/tfjs-core","loc":{"line":17,"column":25,"index":728},"parent":"/mnt/node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/FloorDiv.js","resolved":"/mnt/node_modules/@tensorflow/tfjs-core/dist/index.js"},{"name":"../kernel_utils/kernel_funcs_utils","loc":{"line":18,"column":33,"index":786},"parent":"/mnt/node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/FloorDiv.js","resolved":"/mnt/node_modules/@tensorflow/tfjs-backend-webgl/dist/kernel_utils/kernel_funcs_utils.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.floorDivConfig = exports.floorDiv = void 0;\n\nvar _tfjsCore = require(\"@tensorflow/tfjs-core\");\n\nvar _kernel_funcs_utils = require(\"../kernel_utils/kernel_funcs_utils\");\n\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n// We use native integer division to deal with floating point imprecision. Since\n// we implement floor division and glsl implements truncated division, we\n// correct for this by subtracting 1 from result when the result is negative and\n// there is a remainder.\nconst INT_DIV = `\n  float s = sign(a) * sign(b);\n  int ia = round(a);\n  int ib = round(b);\n  if (ib != 0) {\n    // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n    return float(idiv(ia, ib, s));\n  } else {\n    return NAN;\n  }\n`;\nconst INT_DIV_PACKED = `\n  ivec4 ia = round(a);\n  ivec4 ib = round(b);\n  bvec4 cond = notEqual(ib, ivec4(0));\n  ivec4 result = ivec4(0);\n  vec4 s = sign(a) * sign(b);\n\n  // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n  if (cond[0]) {\n    result[0] = idiv(ia[0], ib[0], s[0]);\n  }\n  if (cond[1]) {\n    result[1] = idiv(ia[1], ib[1], s[1]);\n  }\n  if (cond[2]) {\n    result[2] = idiv(ia[2], ib[2], s[2]);\n  }\n  if (cond[3]) {\n    result[3] = idiv(ia[3], ib[3], s[3]);\n  }\n  return vec4(result);\n`;\nconst floorDiv = (0, _kernel_funcs_utils.binaryKernelFunc)({\n  opSnippet: INT_DIV,\n  packedOpSnippet: INT_DIV_PACKED,\n  dtype: 'int32'\n});\nexports.floorDiv = floorDiv;\nconst floorDivConfig = {\n  kernelName: _tfjsCore.FloorDiv,\n  backendName: 'webgl',\n  kernelFunc: floorDiv\n};\nexports.floorDivConfig = floorDivConfig;"},"sourceMaps":{"js":{"mappings":[{"source":"../../../../../../tfjs-backend-webgl/src/kernels/FloorDiv.ts","name":null,"original":{"line":18,"column":0},"generated":{"line":8,"column":0}},{"source":"../../../../../../tfjs-backend-webgl/src/kernels/FloorDiv.ts","name":null,"original":{"line":20,"column":0},"generated":{"line":10,"column":0}},{"source":"../../../../../../tfjs-backend-webgl/src/kernels/FloorDiv.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":12,"column":0}},{"source":"../../../../../../tfjs-backend-webgl/src/kernels/FloorDiv.ts","name":null,"original":{"line":22,"column":0},"generated":{"line":28,"column":0}},{"source":"../../../../../../tfjs-backend-webgl/src/kernels/FloorDiv.ts","name":null,"original":{"line":23,"column":0},"generated":{"line":29,"column":0}},{"source":"../../../../../../tfjs-backend-webgl/src/kernels/FloorDiv.ts","name":null,"original":{"line":24,"column":0},"generated":{"line":30,"column":0}},{"source":"../../../../../../tfjs-backend-webgl/src/kernels/FloorDiv.ts","name":null,"original":{"line":25,"column":0},"generated":{"line":31,"column":0}},{"source":"../../../../../../tfjs-backend-webgl/src/kernels/FloorDiv.ts","name":null,"original":{"line":26,"column":0},"generated":{"line":32,"column":0}},{"source":"../../../../../../tfjs-backend-webgl/src/kernels/FloorDiv.ts","name":null,"original":{"line":26,"column":6},"generated":{"line":32,"column":6}},{"source":"../../../../../../tfjs-backend-webgl/src/kernels/FloorDiv.ts","name":null,"original":{"line":26,"column":13},"generated":{"line":32,"column":13}},{"source":"../../../../../../tfjs-backend-webgl/src/kernels/FloorDiv.ts","name":null,"original":{"line":26,"column":16},"generated":{"line":32,"column":16}},{"source":"../../../../../../tfjs-backend-webgl/src/kernels/FloorDiv.ts","name":null,"original":{"line":26,"column":0},"generated":{"line":42,"column":1}},{"source":"../../../../../../tfjs-backend-webgl/src/kernels/FloorDiv.ts","name":null,"original":{"line":38,"column":0},"generated":{"line":43,"column":0}},{"source":"../../../../../../tfjs-backend-webgl/src/kernels/FloorDiv.ts","name":null,"original":{"line":38,"column":6},"generated":{"line":43,"column":6}},{"source":"../../../../../../tfjs-backend-webgl/src/kernels/FloorDiv.ts","name":null,"original":{"line":38,"column":20},"generated":{"line":43,"column":20}},{"source":"../../../../../../tfjs-backend-webgl/src/kernels/FloorDiv.ts","name":null,"original":{"line":38,"column":23},"generated":{"line":43,"column":23}},{"source":"../../../../../../tfjs-backend-webgl/src/kernels/FloorDiv.ts","name":null,"original":{"line":38,"column":0},"generated":{"line":64,"column":1}},{"source":"../../../../../../tfjs-backend-webgl/src/kernels/FloorDiv.ts","name":null,"original":{"line":61,"column":7},"generated":{"line":65,"column":0}},{"source":"../../../../../../tfjs-backend-webgl/src/kernels/FloorDiv.ts","name":null,"original":{"line":61,"column":13},"generated":{"line":65,"column":6}},{"source":"../../../../../../tfjs-backend-webgl/src/kernels/FloorDiv.ts","name":null,"original":{"line":61,"column":21},"generated":{"line":65,"column":14}},{"source":"../../../../../../tfjs-backend-webgl/src/kernels/FloorDiv.ts","name":null,"original":{"line":61,"column":24},"generated":{"line":65,"column":17}},{"source":"../../../../../../tfjs-backend-webgl/src/kernels/FloorDiv.ts","name":null,"original":{"line":62,"column":4},"generated":{"line":65,"column":59}},{"source":"../../../../../../tfjs-backend-webgl/src/kernels/FloorDiv.ts","name":null,"original":{"line":62,"column":5},"generated":{"line":66,"column":0}},{"source":"../../../../../../tfjs-backend-webgl/src/kernels/FloorDiv.ts","name":null,"original":{"line":62,"column":5},"generated":{"line":66,"column":2}},{"source":"../../../../../../tfjs-backend-webgl/src/kernels/FloorDiv.ts","name":null,"original":{"line":62,"column":14},"generated":{"line":66,"column":11}},{"source":"../../../../../../tfjs-backend-webgl/src/kernels/FloorDiv.ts","name":null,"original":{"line":62,"column":16},"generated":{"line":66,"column":13}},{"source":"../../../../../../tfjs-backend-webgl/src/kernels/FloorDiv.ts","name":null,"original":{"line":62,"column":4},"generated":{"line":66,"column":20}},{"source":"../../../../../../tfjs-backend-webgl/src/kernels/FloorDiv.ts","name":null,"original":{"line":62,"column":25},"generated":{"line":67,"column":0}},{"source":"../../../../../../tfjs-backend-webgl/src/kernels/FloorDiv.ts","name":null,"original":{"line":62,"column":25},"generated":{"line":67,"column":2}},{"source":"../../../../../../tfjs-backend-webgl/src/kernels/FloorDiv.ts","name":null,"original":{"line":62,"column":40},"generated":{"line":67,"column":17}},{"source":"../../../../../../tfjs-backend-webgl/src/kernels/FloorDiv.ts","name":null,"original":{"line":62,"column":42},"generated":{"line":67,"column":19}},{"source":"../../../../../../tfjs-backend-webgl/src/kernels/FloorDiv.ts","name":null,"original":{"line":62,"column":4},"generated":{"line":67,"column":33}},{"source":"../../../../../../tfjs-backend-webgl/src/kernels/FloorDiv.ts","name":null,"original":{"line":62,"column":58},"generated":{"line":68,"column":0}},{"source":"../../../../../../tfjs-backend-webgl/src/kernels/FloorDiv.ts","name":null,"original":{"line":62,"column":58},"generated":{"line":68,"column":2}},{"source":"../../../../../../tfjs-backend-webgl/src/kernels/FloorDiv.ts","name":null,"original":{"line":62,"column":63},"generated":{"line":68,"column":7}},{"source":"../../../../../../tfjs-backend-webgl/src/kernels/FloorDiv.ts","name":null,"original":{"line":62,"column":65},"generated":{"line":68,"column":9}},{"source":"../../../../../../tfjs-backend-webgl/src/kernels/FloorDiv.ts","name":null,"original":{"line":62,"column":4},"generated":{"line":69,"column":0}},{"source":"../../../../../../tfjs-backend-webgl/src/kernels/FloorDiv.ts","name":null,"original":{"line":61,"column":24},"generated":{"line":69,"column":1}},{"source":"../../../../../../tfjs-backend-webgl/src/kernels/FloorDiv.ts","name":null,"original":{"line":61,"column":7},"generated":{"line":69,"column":2}},{"source":"../../../../../../tfjs-backend-webgl/src/kernels/FloorDiv.ts","name":null,"original":{"line":64,"column":7},"generated":{"line":71,"column":0}},{"source":"../../../../../../tfjs-backend-webgl/src/kernels/FloorDiv.ts","name":null,"original":{"line":64,"column":13},"generated":{"line":71,"column":6}},{"source":"../../../../../../tfjs-backend-webgl/src/kernels/FloorDiv.ts","name":null,"original":{"line":64,"column":27},"generated":{"line":71,"column":20}},{"source":"../../../../../../tfjs-backend-webgl/src/kernels/FloorDiv.ts","name":null,"original":{"line":64,"column":44},"generated":{"line":71,"column":23}},{"source":"../../../../../../tfjs-backend-webgl/src/kernels/FloorDiv.ts","name":null,"original":{"line":65,"column":2},"generated":{"line":72,"column":0}},{"source":"../../../../../../tfjs-backend-webgl/src/kernels/FloorDiv.ts","name":null,"original":{"line":65,"column":2},"generated":{"line":72,"column":2}},{"source":"../../../../../../tfjs-backend-webgl/src/kernels/FloorDiv.ts","name":null,"original":{"line":65,"column":12},"generated":{"line":72,"column":12}},{"source":"../../../../../../tfjs-backend-webgl/src/kernels/FloorDiv.ts","name":null,"original":{"line":65,"column":14},"generated":{"line":72,"column":14}},{"source":"../../../../../../tfjs-backend-webgl/src/kernels/FloorDiv.ts","name":null,"original":{"line":64,"column":44},"generated":{"line":72,"column":32}},{"source":"../../../../../../tfjs-backend-webgl/src/kernels/FloorDiv.ts","name":null,"original":{"line":66,"column":2},"generated":{"line":73,"column":0}},{"source":"../../../../../../tfjs-backend-webgl/src/kernels/FloorDiv.ts","name":null,"original":{"line":66,"column":2},"generated":{"line":73,"column":2}},{"source":"../../../../../../tfjs-backend-webgl/src/kernels/FloorDiv.ts","name":null,"original":{"line":66,"column":13},"generated":{"line":73,"column":13}},{"source":"../../../../../../tfjs-backend-webgl/src/kernels/FloorDiv.ts","name":null,"original":{"line":66,"column":15},"generated":{"line":73,"column":15}},{"source":"../../../../../../tfjs-backend-webgl/src/kernels/FloorDiv.ts","name":null,"original":{"line":64,"column":44},"generated":{"line":73,"column":22}},{"source":"../../../../../../tfjs-backend-webgl/src/kernels/FloorDiv.ts","name":null,"original":{"line":67,"column":2},"generated":{"line":74,"column":0}},{"source":"../../../../../../tfjs-backend-webgl/src/kernels/FloorDiv.ts","name":null,"original":{"line":67,"column":2},"generated":{"line":74,"column":2}},{"source":"../../../../../../tfjs-backend-webgl/src/kernels/FloorDiv.ts","name":null,"original":{"line":67,"column":12},"generated":{"line":74,"column":12}},{"source":"../../../../../../tfjs-backend-webgl/src/kernels/FloorDiv.ts","name":null,"original":{"line":67,"column":14},"generated":{"line":74,"column":14}},{"source":"../../../../../../tfjs-backend-webgl/src/kernels/FloorDiv.ts","name":null,"original":{"line":64,"column":44},"generated":{"line":75,"column":0}},{"source":"../../../../../../tfjs-backend-webgl/src/kernels/FloorDiv.ts","name":null,"original":{"line":64,"column":7},"generated":{"line":75,"column":1}}],"sources":{"../../../../../../tfjs-backend-webgl/src/kernels/FloorDiv.ts":"/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {FloorDiv, KernelConfig, KernelFunc} from '@tensorflow/tfjs-core';\n\nimport {binaryKernelFunc} from '../kernel_utils/kernel_funcs_utils';\n\n// We use native integer division to deal with floating point imprecision. Since\n// we implement floor division and glsl implements truncated division, we\n// correct for this by subtracting 1 from result when the result is negative and\n// there is a remainder.\nconst INT_DIV = `\n  float s = sign(a) * sign(b);\n  int ia = round(a);\n  int ib = round(b);\n  if (ib != 0) {\n    // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n    return float(idiv(ia, ib, s));\n  } else {\n    return NAN;\n  }\n`;\n\nconst INT_DIV_PACKED = `\n  ivec4 ia = round(a);\n  ivec4 ib = round(b);\n  bvec4 cond = notEqual(ib, ivec4(0));\n  ivec4 result = ivec4(0);\n  vec4 s = sign(a) * sign(b);\n\n  // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n  if (cond[0]) {\n    result[0] = idiv(ia[0], ib[0], s[0]);\n  }\n  if (cond[1]) {\n    result[1] = idiv(ia[1], ib[1], s[1]);\n  }\n  if (cond[2]) {\n    result[2] = idiv(ia[2], ib[2], s[2]);\n  }\n  if (cond[3]) {\n    result[3] = idiv(ia[3], ib[3], s[3]);\n  }\n  return vec4(result);\n`;\n\nexport const floorDiv = binaryKernelFunc(\n    {opSnippet: INT_DIV, packedOpSnippet: INT_DIV_PACKED, dtype: 'int32'});\n\nexport const floorDivConfig: KernelConfig = {\n  kernelName: FloorDiv,\n  backendName: 'webgl',\n  kernelFunc: floorDiv as {} as KernelFunc\n};\n"},"lineCount":null}},"error":null,"hash":"57a2154d1ac21bd4c11ec5ebe453d5cd","cacheData":{"env":{}}}