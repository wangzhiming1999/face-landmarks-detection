{"id":"node_modules/@tensorflow/tfjs-core/dist/ops/print.js","dependencies":[{"name":"/mnt/package.json","includedInParent":true,"mtime":1677116220762},{"name":"/mnt/.babelrc","includedInParent":true,"mtime":1677077576810},{"name":"/mnt/node_modules/@tensorflow/tfjs-core/package.json","includedInParent":true,"mtime":1677116171155}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.print = print;\n\n/**\n * @license\n * Copyright 2020 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n/**\n * Prints information about the `tf.Tensor` including its data.\n *\n * ```js\n * const verbose = true;\n * tf.tensor2d([1, 2, 3, 4], [2, 2]).print(verbose);\n * ```\n * @param x The tensor to be printed.\n * @param verbose Whether to print verbose information about the ` Tensor`,\n * including dtype and size.\n *\n * @doc {heading: 'Tensors', subheading: 'Creation'}\n */\nfunction print(x, verbose = false) {\n  console.log(x.toString(verbose));\n}"},"sourceMaps":{"js":{"mappings":[{"source":"../../../../../../tfjs-core/src/ops/print.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":8,"column":0}},{"source":"../../../../../../tfjs-core/src/ops/print.ts","name":null,"original":{"line":20,"column":0},"generated":{"line":25,"column":0}},{"source":"../../../../../../tfjs-core/src/ops/print.ts","name":null,"original":{"line":33,"column":6},"generated":{"line":38,"column":0}},{"source":"../../../../../../tfjs-core/src/ops/print.ts","name":null,"original":{"line":33,"column":16},"generated":{"line":38,"column":9}},{"source":"../../../../../../tfjs-core/src/ops/print.ts","name":null,"original":{"line":33,"column":6},"generated":{"line":38,"column":14}},{"source":"../../../../../../tfjs-core/src/ops/print.ts","name":null,"original":{"line":33,"column":40},"generated":{"line":38,"column":15}},{"source":"../../../../../../tfjs-core/src/ops/print.ts","name":null,"original":{"line":33,"column":6},"generated":{"line":38,"column":16}},{"source":"../../../../../../tfjs-core/src/ops/print.ts","name":null,"original":{"line":33,"column":46},"generated":{"line":38,"column":18}},{"source":"../../../../../../tfjs-core/src/ops/print.ts","name":null,"original":{"line":33,"column":53},"generated":{"line":38,"column":25}},{"source":"../../../../../../tfjs-core/src/ops/print.ts","name":null,"original":{"line":33,"column":56},"generated":{"line":38,"column":28}},{"source":"../../../../../../tfjs-core/src/ops/print.ts","name":null,"original":{"line":33,"column":6},"generated":{"line":38,"column":33}},{"source":"../../../../../../tfjs-core/src/ops/print.ts","name":null,"original":{"line":33,"column":61},"generated":{"line":38,"column":35}},{"source":"../../../../../../tfjs-core/src/ops/print.ts","name":null,"original":{"line":34,"column":2},"generated":{"line":39,"column":0}},{"source":"../../../../../../tfjs-core/src/ops/print.ts","name":null,"original":{"line":34,"column":2},"generated":{"line":39,"column":2}},{"source":"../../../../../../tfjs-core/src/ops/print.ts","name":null,"original":{"line":34,"column":9},"generated":{"line":39,"column":9}},{"source":"../../../../../../tfjs-core/src/ops/print.ts","name":null,"original":{"line":34,"column":10},"generated":{"line":39,"column":10}},{"source":"../../../../../../tfjs-core/src/ops/print.ts","name":null,"original":{"line":34,"column":2},"generated":{"line":39,"column":13}},{"source":"../../../../../../tfjs-core/src/ops/print.ts","name":null,"original":{"line":34,"column":14},"generated":{"line":39,"column":14}},{"source":"../../../../../../tfjs-core/src/ops/print.ts","name":null,"original":{"line":34,"column":15},"generated":{"line":39,"column":15}},{"source":"../../../../../../tfjs-core/src/ops/print.ts","name":null,"original":{"line":34,"column":16},"generated":{"line":39,"column":16}},{"source":"../../../../../../tfjs-core/src/ops/print.ts","name":null,"original":{"line":34,"column":14},"generated":{"line":39,"column":24}},{"source":"../../../../../../tfjs-core/src/ops/print.ts","name":null,"original":{"line":34,"column":25},"generated":{"line":39,"column":25}},{"source":"../../../../../../tfjs-core/src/ops/print.ts","name":null,"original":{"line":34,"column":14},"generated":{"line":39,"column":32}},{"source":"../../../../../../tfjs-core/src/ops/print.ts","name":null,"original":{"line":34,"column":2},"generated":{"line":39,"column":33}},{"source":"../../../../../../tfjs-core/src/ops/print.ts","name":null,"original":{"line":35,"column":1},"generated":{"line":40,"column":0}}],"sources":{"../../../../../../tfjs-core/src/ops/print.ts":"/**\n * @license\n * Copyright 2020 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {Tensor} from '../tensor';\n\n/**\n * Prints information about the `tf.Tensor` including its data.\n *\n * ```js\n * const verbose = true;\n * tf.tensor2d([1, 2, 3, 4], [2, 2]).print(verbose);\n * ```\n * @param x The tensor to be printed.\n * @param verbose Whether to print verbose information about the ` Tensor`,\n * including dtype and size.\n *\n * @doc {heading: 'Tensors', subheading: 'Creation'}\n */\nexport function print<T extends Tensor>(x: T, verbose = false): void {\n  console.log(x.toString(verbose));\n}\n"},"lineCount":null}},"error":null,"hash":"ad35f826615fffdcefa9d723a6cc8c0f","cacheData":{"env":{}}}