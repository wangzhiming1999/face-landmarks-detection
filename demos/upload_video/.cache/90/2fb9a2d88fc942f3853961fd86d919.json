{"id":"node_modules/@tensorflow/tfjs-core/dist/ops/batch_to_space_nd.js","dependencies":[{"name":"/mnt/package.json","includedInParent":true,"mtime":1677113610184},{"name":"/mnt/.babelrc","includedInParent":true,"mtime":1677077576820},{"name":"/mnt/node_modules/@tensorflow/tfjs-core/package.json","includedInParent":true,"mtime":1677113567214},{"name":"../engine","loc":{"line":17,"column":23,"index":726},"parent":"/mnt/node_modules/@tensorflow/tfjs-core/dist/ops/batch_to_space_nd.js","resolved":"/mnt/node_modules/@tensorflow/tfjs-core/dist/engine.js"},{"name":"../kernel_names","loc":{"line":18,"column":31,"index":770},"parent":"/mnt/node_modules/@tensorflow/tfjs-core/dist/ops/batch_to_space_nd.js","resolved":"/mnt/node_modules/@tensorflow/tfjs-core/dist/kernel_names.js"},{"name":"../tensor_util_env","loc":{"line":19,"column":32,"index":821},"parent":"/mnt/node_modules/@tensorflow/tfjs-core/dist/ops/batch_to_space_nd.js","resolved":"/mnt/node_modules/@tensorflow/tfjs-core/dist/tensor_util_env.js"},{"name":"../util","loc":{"line":20,"column":22,"index":865},"parent":"/mnt/node_modules/@tensorflow/tfjs-core/dist/ops/batch_to_space_nd.js","resolved":"/mnt/node_modules/@tensorflow/tfjs-core/dist/util.js"},{"name":"./operation","loc":{"line":21,"column":19,"index":895},"parent":"/mnt/node_modules/@tensorflow/tfjs-core/dist/ops/batch_to_space_nd.js","resolved":"/mnt/node_modules/@tensorflow/tfjs-core/dist/ops/operation.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.batchToSpaceND = void 0;\n\nvar _engine = require(\"../engine\");\n\nvar _kernel_names = require(\"../kernel_names\");\n\nvar _tensor_util_env = require(\"../tensor_util_env\");\n\nvar util = _interopRequireWildcard(require(\"../util\"));\n\nvar _operation = require(\"./operation\");\n\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n/**\n * This operation reshapes the \"batch\" dimension 0 into `M + 1` dimensions of\n * shape `blockShape + [batch]`, interleaves these blocks back into the grid\n * defined by the spatial dimensions `[1, ..., M]`, to obtain a result with\n * the same rank as the input. The spatial dimensions of this intermediate\n * result are then optionally cropped according to `crops` to produce the\n * output. This is the reverse of `tf.spaceToBatchND`. See below for a precise\n * description.\n *\n * ```js\n * const x = tf.tensor4d([1, 2, 3, 4], [4, 1, 1, 1]);\n * const blockShape = [2, 2];\n * const crops = [[0, 0], [0, 0]];\n *\n * x.batchToSpaceND(blockShape, crops).print();\n * ```\n *\n * @param x A `tf.Tensor`. N-D with `x.shape` = `[batch] + spatialShape +\n * remainingShape`, where spatialShape has `M` dimensions.\n * @param blockShape A 1-D array. Must have shape `[M]`, all values must\n * be >= 1.\n * @param crops A 2-D array.  Must have shape `[M, 2]`, all values must be >= 0.\n * `crops[i] = [cropStart, cropEnd]` specifies the amount to crop from input\n * dimension `i + 1`, which corresponds to spatial dimension `i`. It is required\n * that `cropStart[i] + cropEnd[i] <= blockShape[i] * inputShape[i + 1]`\n *\n * This operation is equivalent to the following steps:\n *\n * 1. Reshape `x` to `reshaped` of shape: `[blockShape[0], ...,\n * blockShape[M-1], batch / prod(blockShape), x.shape[1], ...,\n * x.shape[N-1]]`\n *\n * 2. Permute dimensions of `reshaped` to produce `permuted` of shape `[batch /\n * prod(blockShape),x.shape[1], blockShape[0], ..., x.shape[M],\n * blockShape[M-1],x.shape[M+1], ..., x.shape[N-1]]`\n *\n * 3. Reshape `permuted` to produce `reshapedPermuted` of shape `[batch /\n * prod(blockShape),x.shape[1] * blockShape[0], ..., x.shape[M] *\n * blockShape[M-1],x.shape[M+1], ..., x.shape[N-1]]`\n *\n * 4. Crop the start and end of dimensions `[1, ..., M]` of `reshapedPermuted`\n * according to `crops` to produce the output of shape: `[batch /\n * prod(blockShape),x.shape[1] * blockShape[0] - crops[0,0] - crops[0,1],\n * ..., x.shape[M] * blockShape[M-1] - crops[M-1,0] -\n * crops[M-1,1],x.shape[M+1], ..., x.shape[N-1]]`\n *\n * @doc {heading: 'Tensors', subheading: 'Transformations'}\n */\nfunction batchToSpaceND_(x, blockShape, crops) {\n  const $x = (0, _tensor_util_env.convertToTensor)(x, 'x', 'batchToSpaceND');\n  const prod = blockShape.reduce((a, b) => a * b);\n  util.assert($x.rank >= 1 + blockShape.length, () => `input rank is ${$x.rank} but should be > than blockShape.length ${blockShape.length}`);\n  util.assert(crops.length === blockShape.length, () => `crops.length is ${crops.length} but should be equal to blockShape.length  ${blockShape.length}`);\n  util.assert($x.shape[0] % prod === 0, () => `input tensor batch is ${$x.shape[0]} but is not divisible by the product of ` + `the elements of blockShape ${blockShape.join(' * ')} === ${prod}`);\n  const inputs = {\n    x: $x\n  };\n  const attrs = {\n    blockShape,\n    crops\n  };\n  return _engine.ENGINE.runKernel(_kernel_names.BatchToSpaceND, inputs, attrs);\n}\n\nconst batchToSpaceND = /* @__PURE__ */(0, _operation.op)({\n  batchToSpaceND_\n});\nexports.batchToSpaceND = batchToSpaceND;"},"sourceMaps":{"js":{"mappings":[{"source":"../../../../../../tfjs-core/src/ops/batch_to_space_nd.ts","name":null,"original":{"line":18,"column":0},"generated":{"line":8,"column":0}},{"source":"../../../../../../tfjs-core/src/ops/batch_to_space_nd.ts","name":null,"original":{"line":19,"column":0},"generated":{"line":10,"column":0}},{"source":"../../../../../../tfjs-core/src/ops/batch_to_space_nd.ts","name":null,"original":{"line":23,"column":0},"generated":{"line":12,"column":0}},{"source":"../../../../../../tfjs-core/src/ops/batch_to_space_nd.ts","name":null,"original":{"line":25,"column":0},"generated":{"line":14,"column":0}},{"source":"../../../../../../tfjs-core/src/ops/batch_to_space_nd.ts","name":null,"original":{"line":27,"column":0},"generated":{"line":16,"column":0}},{"source":"../../../../../../tfjs-core/src/ops/batch_to_space_nd.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":22,"column":0}},{"source":"../../../../../../tfjs-core/src/ops/batch_to_space_nd.ts","name":null,"original":{"line":29,"column":0},"generated":{"line":39,"column":0}},{"source":"../../../../../../tfjs-core/src/ops/batch_to_space_nd.ts","name":null,"original":{"line":77,"column":0},"generated":{"line":87,"column":0}},{"source":"../../../../../../tfjs-core/src/ops/batch_to_space_nd.ts","name":null,"original":{"line":77,"column":9},"generated":{"line":87,"column":9}},{"source":"../../../../../../tfjs-core/src/ops/batch_to_space_nd.ts","name":null,"original":{"line":77,"column":0},"generated":{"line":87,"column":24}},{"source":"../../../../../../tfjs-core/src/ops/batch_to_space_nd.ts","name":null,"original":{"line":78,"column":4},"generated":{"line":87,"column":25}},{"source":"../../../../../../tfjs-core/src/ops/batch_to_space_nd.ts","name":null,"original":{"line":77,"column":0},"generated":{"line":87,"column":26}},{"source":"../../../../../../tfjs-core/src/ops/batch_to_space_nd.ts","name":null,"original":{"line":78,"column":21},"generated":{"line":87,"column":28}},{"source":"../../../../../../tfjs-core/src/ops/batch_to_space_nd.ts","name":null,"original":{"line":77,"column":0},"generated":{"line":87,"column":38}},{"source":"../../../../../../tfjs-core/src/ops/batch_to_space_nd.ts","name":null,"original":{"line":78,"column":43},"generated":{"line":87,"column":40}},{"source":"../../../../../../tfjs-core/src/ops/batch_to_space_nd.ts","name":null,"original":{"line":77,"column":0},"generated":{"line":87,"column":45}},{"source":"../../../../../../tfjs-core/src/ops/batch_to_space_nd.ts","name":null,"original":{"line":78,"column":60},"generated":{"line":87,"column":47}},{"source":"../../../../../../tfjs-core/src/ops/batch_to_space_nd.ts","name":null,"original":{"line":79,"column":2},"generated":{"line":88,"column":0}},{"source":"../../../../../../tfjs-core/src/ops/batch_to_space_nd.ts","name":null,"original":{"line":79,"column":8},"generated":{"line":88,"column":8}},{"source":"../../../../../../tfjs-core/src/ops/batch_to_space_nd.ts","name":null,"original":{"line":79,"column":10},"generated":{"line":88,"column":10}},{"source":"../../../../../../tfjs-core/src/ops/batch_to_space_nd.ts","name":null,"original":{"line":79,"column":13},"generated":{"line":88,"column":13}},{"source":"../../../../../../tfjs-core/src/ops/batch_to_space_nd.ts","name":null,"original":{"line":79,"column":29},"generated":{"line":88,"column":51}},{"source":"../../../../../../tfjs-core/src/ops/batch_to_space_nd.ts","name":null,"original":{"line":79,"column":13},"generated":{"line":88,"column":52}},{"source":"../../../../../../tfjs-core/src/ops/batch_to_space_nd.ts","name":null,"original":{"line":79,"column":32},"generated":{"line":88,"column":54}},{"source":"../../../../../../tfjs-core/src/ops/batch_to_space_nd.ts","name":null,"original":{"line":79,"column":13},"generated":{"line":88,"column":57}},{"source":"../../../../../../tfjs-core/src/ops/batch_to_space_nd.ts","name":null,"original":{"line":79,"column":37},"generated":{"line":88,"column":59}},{"source":"../../../../../../tfjs-core/src/ops/batch_to_space_nd.ts","name":null,"original":{"line":79,"column":13},"generated":{"line":88,"column":75}},{"source":"../../../../../../tfjs-core/src/ops/batch_to_space_nd.ts","name":null,"original":{"line":79,"column":2},"generated":{"line":88,"column":76}},{"source":"../../../../../../tfjs-core/src/ops/batch_to_space_nd.ts","name":null,"original":{"line":80,"column":2},"generated":{"line":89,"column":0}},{"source":"../../../../../../tfjs-core/src/ops/batch_to_space_nd.ts","name":null,"original":{"line":80,"column":8},"generated":{"line":89,"column":8}},{"source":"../../../../../../tfjs-core/src/ops/batch_to_space_nd.ts","name":null,"original":{"line":80,"column":12},"generated":{"line":89,"column":12}},{"source":"../../../../../../tfjs-core/src/ops/batch_to_space_nd.ts","name":null,"original":{"line":80,"column":15},"generated":{"line":89,"column":15}},{"source":"../../../../../../tfjs-core/src/ops/batch_to_space_nd.ts","name":null,"original":{"line":80,"column":25},"generated":{"line":89,"column":25}},{"source":"../../../../../../tfjs-core/src/ops/batch_to_space_nd.ts","name":null,"original":{"line":80,"column":26},"generated":{"line":89,"column":26}},{"source":"../../../../../../tfjs-core/src/ops/batch_to_space_nd.ts","name":null,"original":{"line":80,"column":15},"generated":{"line":89,"column":32}},{"source":"../../../../../../tfjs-core/src/ops/batch_to_space_nd.ts","name":null,"original":{"line":80,"column":33},"generated":{"line":89,"column":33}},{"source":"../../../../../../tfjs-core/src/ops/batch_to_space_nd.ts","name":null,"original":{"line":80,"column":34},"generated":{"line":89,"column":34}},{"source":"../../../../../../tfjs-core/src/ops/batch_to_space_nd.ts","name":null,"original":{"line":80,"column":33},"generated":{"line":89,"column":35}},{"source":"../../../../../../tfjs-core/src/ops/batch_to_space_nd.ts","name":null,"original":{"line":80,"column":37},"generated":{"line":89,"column":37}},{"source":"../../../../../../tfjs-core/src/ops/batch_to_space_nd.ts","name":null,"original":{"line":80,"column":33},"generated":{"line":89,"column":38}},{"source":"../../../../../../tfjs-core/src/ops/batch_to_space_nd.ts","name":null,"original":{"line":80,"column":43},"generated":{"line":89,"column":43}},{"source":"../../../../../../tfjs-core/src/ops/batch_to_space_nd.ts","name":null,"original":{"line":80,"column":44},"generated":{"line":89,"column":44}},{"source":"../../../../../../tfjs-core/src/ops/batch_to_space_nd.ts","name":null,"original":{"line":80,"column":47},"generated":{"line":89,"column":47}},{"source":"../../../../../../tfjs-core/src/ops/batch_to_space_nd.ts","name":null,"original":{"line":80,"column":15},"generated":{"line":89,"column":48}},{"source":"../../../../../../tfjs-core/src/ops/batch_to_space_nd.ts","name":null,"original":{"line":80,"column":2},"generated":{"line":89,"column":49}},{"source":"../../../../../../tfjs-core/src/ops/batch_to_space_nd.ts","name":null,"original":{"line":82,"column":2},"generated":{"line":90,"column":0}},{"source":"../../../../../../tfjs-core/src/ops/batch_to_space_nd.ts","name":null,"original":{"line":82,"column":2},"generated":{"line":90,"column":2}},{"source":"../../../../../../tfjs-core/src/ops/batch_to_space_nd.ts","name":null,"original":{"line":82,"column":6},"generated":{"line":90,"column":6}},{"source":"../../../../../../tfjs-core/src/ops/batch_to_space_nd.ts","name":null,"original":{"line":82,"column":7},"generated":{"line":90,"column":7}},{"source":"../../../../../../tfjs-core/src/ops/batch_to_space_nd.ts","name":null,"original":{"line":82,"column":2},"generated":{"line":90,"column":13}},{"source":"../../../../../../tfjs-core/src/ops/batch_to_space_nd.ts","name":null,"original":{"line":83,"column":6},"generated":{"line":90,"column":14}},{"source":"../../../../../../tfjs-core/src/ops/batch_to_space_nd.ts","name":null,"original":{"line":83,"column":8},"generated":{"line":90,"column":16}},{"source":"../../../../../../tfjs-core/src/ops/batch_to_space_nd.ts","name":null,"original":{"line":83,"column":9},"generated":{"line":90,"column":17}},{"source":"../../../../../../tfjs-core/src/ops/batch_to_space_nd.ts","name":null,"original":{"line":83,"column":6},"generated":{"line":90,"column":21}},{"source":"../../../../../../tfjs-core/src/ops/batch_to_space_nd.ts","name":null,"original":{"line":83,"column":17},"generated":{"line":90,"column":25}},{"source":"../../../../../../tfjs-core/src/ops/batch_to_space_nd.ts","name":null,"original":{"line":83,"column":21},"generated":{"line":90,"column":29}},{"source":"../../../../../../tfjs-core/src/ops/batch_to_space_nd.ts","name":null,"original":{"line":83,"column":31},"generated":{"line":90,"column":39}},{"source":"../../../../../../tfjs-core/src/ops/batch_to_space_nd.ts","name":null,"original":{"line":83,"column":32},"generated":{"line":90,"column":40}},{"source":"../../../../../../tfjs-core/src/ops/batch_to_space_nd.ts","name":null,"original":{"line":82,"column":2},"generated":{"line":90,"column":46}},{"source":"../../../../../../tfjs-core/src/ops/batch_to_space_nd.ts","name":null,"original":{"line":84,"column":6},"generated":{"line":90,"column":48}},{"source":"../../../../../../tfjs-core/src/ops/batch_to_space_nd.ts","name":null,"original":{"line":84,"column":12},"generated":{"line":90,"column":54}},{"source":"../../../../../../tfjs-core/src/ops/batch_to_space_nd.ts","name":null,"original":{"line":84,"column":29},"generated":{"line":90,"column":71}},{"source":"../../../../../../tfjs-core/src/ops/batch_to_space_nd.ts","name":null,"original":{"line":84,"column":31},"generated":{"line":90,"column":73}},{"source":"../../../../../../tfjs-core/src/ops/batch_to_space_nd.ts","name":null,"original":{"line":84,"column":32},"generated":{"line":90,"column":74}},{"source":"../../../../../../tfjs-core/src/ops/batch_to_space_nd.ts","name":null,"original":{"line":84,"column":36},"generated":{"line":90,"column":78}},{"source":"../../../../../../tfjs-core/src/ops/batch_to_space_nd.ts","name":null,"original":{"line":85,"column":10},"generated":{"line":90,"column":121}},{"source":"../../../../../../tfjs-core/src/ops/batch_to_space_nd.ts","name":null,"original":{"line":85,"column":20},"generated":{"line":90,"column":131}},{"source":"../../../../../../tfjs-core/src/ops/batch_to_space_nd.ts","name":null,"original":{"line":85,"column":21},"generated":{"line":90,"column":132}},{"source":"../../../../../../tfjs-core/src/ops/batch_to_space_nd.ts","name":null,"original":{"line":85,"column":27},"generated":{"line":90,"column":138}},{"source":"../../../../../../tfjs-core/src/ops/batch_to_space_nd.ts","name":null,"original":{"line":82,"column":2},"generated":{"line":90,"column":140}},{"source":"../../../../../../tfjs-core/src/ops/batch_to_space_nd.ts","name":null,"original":{"line":87,"column":2},"generated":{"line":91,"column":0}},{"source":"../../../../../../tfjs-core/src/ops/batch_to_space_nd.ts","name":null,"original":{"line":87,"column":2},"generated":{"line":91,"column":2}},{"source":"../../../../../../tfjs-core/src/ops/batch_to_space_nd.ts","name":null,"original":{"line":87,"column":6},"generated":{"line":91,"column":6}},{"source":"../../../../../../tfjs-core/src/ops/batch_to_space_nd.ts","name":null,"original":{"line":87,"column":7},"generated":{"line":91,"column":7}},{"source":"../../../../../../tfjs-core/src/ops/batch_to_space_nd.ts","name":null,"original":{"line":87,"column":2},"generated":{"line":91,"column":13}},{"source":"../../../../../../tfjs-core/src/ops/batch_to_space_nd.ts","name":null,"original":{"line":88,"column":6},"generated":{"line":91,"column":14}},{"source":"../../../../../../tfjs-core/src/ops/batch_to_space_nd.ts","name":null,"original":{"line":88,"column":11},"generated":{"line":91,"column":19}},{"source":"../../../../../../tfjs-core/src/ops/batch_to_space_nd.ts","name":null,"original":{"line":88,"column":12},"generated":{"line":91,"column":20}},{"source":"../../../../../../tfjs-core/src/ops/batch_to_space_nd.ts","name":null,"original":{"line":88,"column":6},"generated":{"line":91,"column":26}},{"source":"../../../../../../tfjs-core/src/ops/batch_to_space_nd.ts","name":null,"original":{"line":88,"column":23},"generated":{"line":91,"column":31}},{"source":"../../../../../../tfjs-core/src/ops/batch_to_space_nd.ts","name":null,"original":{"line":88,"column":33},"generated":{"line":91,"column":41}},{"source":"../../../../../../tfjs-core/src/ops/batch_to_space_nd.ts","name":null,"original":{"line":88,"column":34},"generated":{"line":91,"column":42}},{"source":"../../../../../../tfjs-core/src/ops/batch_to_space_nd.ts","name":null,"original":{"line":87,"column":2},"generated":{"line":91,"column":48}},{"source":"../../../../../../tfjs-core/src/ops/batch_to_space_nd.ts","name":null,"original":{"line":89,"column":6},"generated":{"line":91,"column":50}},{"source":"../../../../../../tfjs-core/src/ops/batch_to_space_nd.ts","name":null,"original":{"line":89,"column":12},"generated":{"line":91,"column":56}},{"source":"../../../../../../tfjs-core/src/ops/batch_to_space_nd.ts","name":null,"original":{"line":90,"column":10},"generated":{"line":91,"column":75}},{"source":"../../../../../../tfjs-core/src/ops/batch_to_space_nd.ts","name":null,"original":{"line":90,"column":15},"generated":{"line":91,"column":80}},{"source":"../../../../../../tfjs-core/src/ops/batch_to_space_nd.ts","name":null,"original":{"line":90,"column":16},"generated":{"line":91,"column":81}},{"source":"../../../../../../tfjs-core/src/ops/batch_to_space_nd.ts","name":null,"original":{"line":90,"column":22},"generated":{"line":91,"column":87}},{"source":"../../../../../../tfjs-core/src/ops/batch_to_space_nd.ts","name":null,"original":{"line":91,"column":10},"generated":{"line":91,"column":133}},{"source":"../../../../../../tfjs-core/src/ops/batch_to_space_nd.ts","name":null,"original":{"line":91,"column":20},"generated":{"line":91,"column":143}},{"source":"../../../../../../tfjs-core/src/ops/batch_to_space_nd.ts","name":null,"original":{"line":91,"column":21},"generated":{"line":91,"column":144}},{"source":"../../../../../../tfjs-core/src/ops/batch_to_space_nd.ts","name":null,"original":{"line":91,"column":27},"generated":{"line":91,"column":150}},{"source":"../../../../../../tfjs-core/src/ops/batch_to_space_nd.ts","name":null,"original":{"line":87,"column":2},"generated":{"line":91,"column":152}},{"source":"../../../../../../tfjs-core/src/ops/batch_to_space_nd.ts","name":null,"original":{"line":93,"column":2},"generated":{"line":92,"column":0}},{"source":"../../../../../../tfjs-core/src/ops/batch_to_space_nd.ts","name":null,"original":{"line":93,"column":2},"generated":{"line":92,"column":2}},{"source":"../../../../../../tfjs-core/src/ops/batch_to_space_nd.ts","name":null,"original":{"line":93,"column":6},"generated":{"line":92,"column":6}},{"source":"../../../../../../tfjs-core/src/ops/batch_to_space_nd.ts","name":null,"original":{"line":93,"column":7},"generated":{"line":92,"column":7}},{"source":"../../../../../../tfjs-core/src/ops/batch_to_space_nd.ts","name":null,"original":{"line":93,"column":2},"generated":{"line":92,"column":13}},{"source":"../../../../../../tfjs-core/src/ops/batch_to_space_nd.ts","name":null,"original":{"line":94,"column":6},"generated":{"line":92,"column":14}},{"source":"../../../../../../tfjs-core/src/ops/batch_to_space_nd.ts","name":null,"original":{"line":94,"column":8},"generated":{"line":92,"column":16}},{"source":"../../../../../../tfjs-core/src/ops/batch_to_space_nd.ts","name":null,"original":{"line":94,"column":9},"generated":{"line":92,"column":17}},{"source":"../../../../../../tfjs-core/src/ops/batch_to_space_nd.ts","name":null,"original":{"line":94,"column":6},"generated":{"line":92,"column":22}},{"source":"../../../../../../tfjs-core/src/ops/batch_to_space_nd.ts","name":null,"original":{"line":94,"column":15},"generated":{"line":92,"column":23}},{"source":"../../../../../../tfjs-core/src/ops/batch_to_space_nd.ts","name":null,"original":{"line":94,"column":6},"generated":{"line":92,"column":24}},{"source":"../../../../../../tfjs-core/src/ops/batch_to_space_nd.ts","name":null,"original":{"line":94,"column":20},"generated":{"line":92,"column":28}},{"source":"../../../../../../tfjs-core/src/ops/batch_to_space_nd.ts","name":null,"original":{"line":94,"column":6},"generated":{"line":92,"column":32}},{"source":"../../../../../../tfjs-core/src/ops/batch_to_space_nd.ts","name":null,"original":{"line":94,"column":29},"generated":{"line":92,"column":37}},{"source":"../../../../../../tfjs-core/src/ops/batch_to_space_nd.ts","name":null,"original":{"line":93,"column":2},"generated":{"line":92,"column":38}},{"source":"../../../../../../tfjs-core/src/ops/batch_to_space_nd.ts","name":null,"original":{"line":95,"column":6},"generated":{"line":92,"column":40}},{"source":"../../../../../../tfjs-core/src/ops/batch_to_space_nd.ts","name":null,"original":{"line":95,"column":12},"generated":{"line":92,"column":46}},{"source":"../../../../../../tfjs-core/src/ops/batch_to_space_nd.ts","name":null,"original":{"line":96,"column":16},"generated":{"line":92,"column":71}},{"source":"../../../../../../tfjs-core/src/ops/batch_to_space_nd.ts","name":null,"original":{"line":96,"column":18},"generated":{"line":92,"column":73}},{"source":"../../../../../../tfjs-core/src/ops/batch_to_space_nd.ts","name":null,"original":{"line":96,"column":19},"generated":{"line":92,"column":74}},{"source":"../../../../../../tfjs-core/src/ops/batch_to_space_nd.ts","name":null,"original":{"line":96,"column":16},"generated":{"line":92,"column":79}},{"source":"../../../../../../tfjs-core/src/ops/batch_to_space_nd.ts","name":null,"original":{"line":96,"column":25},"generated":{"line":92,"column":80}},{"source":"../../../../../../tfjs-core/src/ops/batch_to_space_nd.ts","name":null,"original":{"line":96,"column":16},"generated":{"line":92,"column":81}},{"source":"../../../../../../tfjs-core/src/ops/batch_to_space_nd.ts","name":null,"original":{"line":96,"column":27},"generated":{"line":92,"column":82}},{"source":"../../../../../../tfjs-core/src/ops/batch_to_space_nd.ts","name":null,"original":{"line":95,"column":12},"generated":{"line":92,"column":124}},{"source":"../../../../../../tfjs-core/src/ops/batch_to_space_nd.ts","name":null,"original":{"line":97,"column":10},"generated":{"line":92,"column":127}},{"source":"../../../../../../tfjs-core/src/ops/batch_to_space_nd.ts","name":null,"original":{"line":97,"column":40},"generated":{"line":92,"column":157}},{"source":"../../../../../../tfjs-core/src/ops/batch_to_space_nd.ts","name":null,"original":{"line":97,"column":50},"generated":{"line":92,"column":167}},{"source":"../../../../../../tfjs-core/src/ops/batch_to_space_nd.ts","name":null,"original":{"line":97,"column":51},"generated":{"line":92,"column":168}},{"source":"../../../../../../tfjs-core/src/ops/batch_to_space_nd.ts","name":null,"original":{"line":97,"column":40},"generated":{"line":92,"column":172}},{"source":"../../../../../../tfjs-core/src/ops/batch_to_space_nd.ts","name":null,"original":{"line":97,"column":56},"generated":{"line":92,"column":173}},{"source":"../../../../../../tfjs-core/src/ops/batch_to_space_nd.ts","name":null,"original":{"line":97,"column":40},"generated":{"line":92,"column":178}},{"source":"../../../../../../tfjs-core/src/ops/batch_to_space_nd.ts","name":null,"original":{"line":97,"column":62},"generated":{"line":92,"column":179}},{"source":"../../../../../../tfjs-core/src/ops/batch_to_space_nd.ts","name":null,"original":{"line":97,"column":70},"generated":{"line":92,"column":187}},{"source":"../../../../../../tfjs-core/src/ops/batch_to_space_nd.ts","name":null,"original":{"line":97,"column":74},"generated":{"line":92,"column":191}},{"source":"../../../../../../tfjs-core/src/ops/batch_to_space_nd.ts","name":null,"original":{"line":93,"column":2},"generated":{"line":92,"column":193}},{"source":"../../../../../../tfjs-core/src/ops/batch_to_space_nd.ts","name":null,"original":{"line":99,"column":2},"generated":{"line":93,"column":0}},{"source":"../../../../../../tfjs-core/src/ops/batch_to_space_nd.ts","name":null,"original":{"line":99,"column":8},"generated":{"line":93,"column":8}},{"source":"../../../../../../tfjs-core/src/ops/batch_to_space_nd.ts","name":null,"original":{"line":99,"column":14},"generated":{"line":93,"column":14}},{"source":"../../../../../../tfjs-core/src/ops/batch_to_space_nd.ts","name":null,"original":{"line":99,"column":39},"generated":{"line":93,"column":17}},{"source":"../../../../../../tfjs-core/src/ops/batch_to_space_nd.ts","name":null,"original":{"line":99,"column":40},"generated":{"line":94,"column":0}},{"source":"../../../../../../tfjs-core/src/ops/batch_to_space_nd.ts","name":null,"original":{"line":99,"column":40},"generated":{"line":94,"column":4}},{"source":"../../../../../../tfjs-core/src/ops/batch_to_space_nd.ts","name":null,"original":{"line":99,"column":41},"generated":{"line":94,"column":5}},{"source":"../../../../../../tfjs-core/src/ops/batch_to_space_nd.ts","name":null,"original":{"line":99,"column":43},"generated":{"line":94,"column":7}},{"source":"../../../../../../tfjs-core/src/ops/batch_to_space_nd.ts","name":null,"original":{"line":99,"column":39},"generated":{"line":95,"column":0}},{"source":"../../../../../../tfjs-core/src/ops/batch_to_space_nd.ts","name":null,"original":{"line":99,"column":2},"generated":{"line":95,"column":3}},{"source":"../../../../../../tfjs-core/src/ops/batch_to_space_nd.ts","name":null,"original":{"line":100,"column":2},"generated":{"line":96,"column":0}},{"source":"../../../../../../tfjs-core/src/ops/batch_to_space_nd.ts","name":null,"original":{"line":100,"column":8},"generated":{"line":96,"column":8}},{"source":"../../../../../../tfjs-core/src/ops/batch_to_space_nd.ts","name":null,"original":{"line":100,"column":13},"generated":{"line":96,"column":13}},{"source":"../../../../../../tfjs-core/src/ops/batch_to_space_nd.ts","name":null,"original":{"line":100,"column":37},"generated":{"line":96,"column":16}},{"source":"../../../../../../tfjs-core/src/ops/batch_to_space_nd.ts","name":null,"original":{"line":100,"column":38},"generated":{"line":97,"column":0}},{"source":"../../../../../../tfjs-core/src/ops/batch_to_space_nd.ts","name":null,"original":{"line":100,"column":38},"generated":{"line":97,"column":4}},{"source":"../../../../../../tfjs-core/src/ops/batch_to_space_nd.ts","name":null,"original":{"line":100,"column":37},"generated":{"line":97,"column":14}},{"source":"../../../../../../tfjs-core/src/ops/batch_to_space_nd.ts","name":null,"original":{"line":100,"column":50},"generated":{"line":98,"column":0}},{"source":"../../../../../../tfjs-core/src/ops/batch_to_space_nd.ts","name":null,"original":{"line":100,"column":50},"generated":{"line":98,"column":4}},{"source":"../../../../../../tfjs-core/src/ops/batch_to_space_nd.ts","name":null,"original":{"line":100,"column":37},"generated":{"line":99,"column":0}},{"source":"../../../../../../tfjs-core/src/ops/batch_to_space_nd.ts","name":null,"original":{"line":100,"column":2},"generated":{"line":99,"column":3}},{"source":"../../../../../../tfjs-core/src/ops/batch_to_space_nd.ts","name":null,"original":{"line":102,"column":2},"generated":{"line":100,"column":0}},{"source":"../../../../../../tfjs-core/src/ops/batch_to_space_nd.ts","name":null,"original":{"line":102,"column":9},"generated":{"line":100,"column":9}},{"source":"../../../../../../tfjs-core/src/ops/batch_to_space_nd.ts","name":null,"original":{"line":102,"column":16},"generated":{"line":100,"column":24}},{"source":"../../../../../../tfjs-core/src/ops/batch_to_space_nd.ts","name":null,"original":{"line":102,"column":9},"generated":{"line":100,"column":33}},{"source":"../../../../../../tfjs-core/src/ops/batch_to_space_nd.ts","name":null,"original":{"line":103,"column":6},"generated":{"line":100,"column":34}},{"source":"../../../../../../tfjs-core/src/ops/batch_to_space_nd.ts","name":null,"original":{"line":102,"column":9},"generated":{"line":100,"column":62}},{"source":"../../../../../../tfjs-core/src/ops/batch_to_space_nd.ts","name":null,"original":{"line":103,"column":22},"generated":{"line":100,"column":64}},{"source":"../../../../../../tfjs-core/src/ops/batch_to_space_nd.ts","name":null,"original":{"line":102,"column":9},"generated":{"line":100,"column":70}},{"source":"../../../../../../tfjs-core/src/ops/batch_to_space_nd.ts","name":null,"original":{"line":104,"column":6},"generated":{"line":100,"column":72}},{"source":"../../../../../../tfjs-core/src/ops/batch_to_space_nd.ts","name":null,"original":{"line":102,"column":9},"generated":{"line":100,"column":77}},{"source":"../../../../../../tfjs-core/src/ops/batch_to_space_nd.ts","name":null,"original":{"line":102,"column":2},"generated":{"line":100,"column":78}},{"source":"../../../../../../tfjs-core/src/ops/batch_to_space_nd.ts","name":null,"original":{"line":105,"column":1},"generated":{"line":101,"column":0}},{"source":"../../../../../../tfjs-core/src/ops/batch_to_space_nd.ts","name":null,"original":{"line":107,"column":7},"generated":{"line":103,"column":0}},{"source":"../../../../../../tfjs-core/src/ops/batch_to_space_nd.ts","name":null,"original":{"line":107,"column":13},"generated":{"line":103,"column":6}},{"source":"../../../../../../tfjs-core/src/ops/batch_to_space_nd.ts","name":null,"original":{"line":107,"column":27},"generated":{"line":103,"column":20}},{"source":"../../../../../../tfjs-core/src/ops/batch_to_space_nd.ts","name":null,"original":{"line":107,"column":30},"generated":{"line":103,"column":23}},{"source":"../../../../../../tfjs-core/src/ops/batch_to_space_nd.ts","name":null,"original":{"line":107,"column":46},"generated":{"line":103,"column":38}},{"source":"../../../../../../tfjs-core/src/ops/batch_to_space_nd.ts","name":null,"original":{"line":107,"column":49},"generated":{"line":103,"column":57}},{"source":"../../../../../../tfjs-core/src/ops/batch_to_space_nd.ts","name":null,"original":{"line":107,"column":50},"generated":{"line":104,"column":0}},{"source":"../../../../../../tfjs-core/src/ops/batch_to_space_nd.ts","name":null,"original":{"line":107,"column":50},"generated":{"line":104,"column":2}},{"source":"../../../../../../tfjs-core/src/ops/batch_to_space_nd.ts","name":null,"original":{"line":107,"column":49},"generated":{"line":105,"column":0}},{"source":"../../../../../../tfjs-core/src/ops/batch_to_space_nd.ts","name":null,"original":{"line":107,"column":46},"generated":{"line":105,"column":1}},{"source":"../../../../../../tfjs-core/src/ops/batch_to_space_nd.ts","name":null,"original":{"line":107,"column":7},"generated":{"line":105,"column":2}}],"sources":{"../../../../../../tfjs-core/src/ops/batch_to_space_nd.ts":"/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {ENGINE} from '../engine';\nimport {BatchToSpaceND, BatchToSpaceNDAttrs, BatchToSpaceNDInputs} from '../kernel_names';\nimport {NamedAttrMap} from '../kernel_registry';\nimport {Tensor} from '../tensor';\nimport {NamedTensorMap} from '../tensor_types';\nimport {convertToTensor} from '../tensor_util_env';\nimport {TensorLike} from '../types';\nimport * as util from '../util';\n\nimport {op} from './operation';\n\n/**\n * This operation reshapes the \"batch\" dimension 0 into `M + 1` dimensions of\n * shape `blockShape + [batch]`, interleaves these blocks back into the grid\n * defined by the spatial dimensions `[1, ..., M]`, to obtain a result with\n * the same rank as the input. The spatial dimensions of this intermediate\n * result are then optionally cropped according to `crops` to produce the\n * output. This is the reverse of `tf.spaceToBatchND`. See below for a precise\n * description.\n *\n * ```js\n * const x = tf.tensor4d([1, 2, 3, 4], [4, 1, 1, 1]);\n * const blockShape = [2, 2];\n * const crops = [[0, 0], [0, 0]];\n *\n * x.batchToSpaceND(blockShape, crops).print();\n * ```\n *\n * @param x A `tf.Tensor`. N-D with `x.shape` = `[batch] + spatialShape +\n * remainingShape`, where spatialShape has `M` dimensions.\n * @param blockShape A 1-D array. Must have shape `[M]`, all values must\n * be >= 1.\n * @param crops A 2-D array.  Must have shape `[M, 2]`, all values must be >= 0.\n * `crops[i] = [cropStart, cropEnd]` specifies the amount to crop from input\n * dimension `i + 1`, which corresponds to spatial dimension `i`. It is required\n * that `cropStart[i] + cropEnd[i] <= blockShape[i] * inputShape[i + 1]`\n *\n * This operation is equivalent to the following steps:\n *\n * 1. Reshape `x` to `reshaped` of shape: `[blockShape[0], ...,\n * blockShape[M-1], batch / prod(blockShape), x.shape[1], ...,\n * x.shape[N-1]]`\n *\n * 2. Permute dimensions of `reshaped` to produce `permuted` of shape `[batch /\n * prod(blockShape),x.shape[1], blockShape[0], ..., x.shape[M],\n * blockShape[M-1],x.shape[M+1], ..., x.shape[N-1]]`\n *\n * 3. Reshape `permuted` to produce `reshapedPermuted` of shape `[batch /\n * prod(blockShape),x.shape[1] * blockShape[0], ..., x.shape[M] *\n * blockShape[M-1],x.shape[M+1], ..., x.shape[N-1]]`\n *\n * 4. Crop the start and end of dimensions `[1, ..., M]` of `reshapedPermuted`\n * according to `crops` to produce the output of shape: `[batch /\n * prod(blockShape),x.shape[1] * blockShape[0] - crops[0,0] - crops[0,1],\n * ..., x.shape[M] * blockShape[M-1] - crops[M-1,0] -\n * crops[M-1,1],x.shape[M+1], ..., x.shape[N-1]]`\n *\n * @doc {heading: 'Tensors', subheading: 'Transformations'}\n */\nfunction batchToSpaceND_<T extends Tensor>(\n    x: T|TensorLike, blockShape: number[], crops: number[][]): T {\n  const $x = convertToTensor(x, 'x', 'batchToSpaceND');\n  const prod = blockShape.reduce((a, b) => a * b);\n\n  util.assert(\n      $x.rank >= 1 + blockShape.length,\n      () => `input rank is ${$x.rank} but should be > than blockShape.length ${\n          blockShape.length}`);\n\n  util.assert(\n      crops.length === blockShape.length,\n      () => `crops.length is ${\n          crops.length} but should be equal to blockShape.length  ${\n          blockShape.length}`);\n\n  util.assert(\n      $x.shape[0] % prod === 0,\n      () => `input tensor batch is ${\n                $x.shape[0]} but is not divisible by the product of ` +\n          `the elements of blockShape ${blockShape.join(' * ')} === ${prod}`);\n\n  const inputs: BatchToSpaceNDInputs = {x: $x};\n  const attrs: BatchToSpaceNDAttrs = {blockShape, crops};\n\n  return ENGINE.runKernel(\n      BatchToSpaceND, inputs as unknown as NamedTensorMap,\n      attrs as unknown as NamedAttrMap);\n}\n\nexport const batchToSpaceND = /* @__PURE__ */ op({batchToSpaceND_});\n"},"lineCount":null}},"error":null,"hash":"7283ae2fc8f36ac1fb999b761bc71ade","cacheData":{"env":{}}}