{"id":"node_modules/@tensorflow/tfjs-core/dist/ops/sparse_to_dense.js","dependencies":[{"name":"/mnt/package.json","includedInParent":true,"mtime":1677113610184},{"name":"/mnt/.babelrc","includedInParent":true,"mtime":1677077576820},{"name":"/mnt/node_modules/@tensorflow/tfjs-core/package.json","includedInParent":true,"mtime":1677113567214},{"name":"../engine","loc":{"line":17,"column":23,"index":726},"parent":"/mnt/node_modules/@tensorflow/tfjs-core/dist/ops/sparse_to_dense.js","resolved":"/mnt/node_modules/@tensorflow/tfjs-core/dist/engine.js"},{"name":"../kernel_names","loc":{"line":18,"column":30,"index":769},"parent":"/mnt/node_modules/@tensorflow/tfjs-core/dist/ops/sparse_to_dense.js","resolved":"/mnt/node_modules/@tensorflow/tfjs-core/dist/kernel_names.js"},{"name":"../ops/sparse_to_dense_util","loc":{"line":19,"column":33,"index":821},"parent":"/mnt/node_modules/@tensorflow/tfjs-core/dist/ops/sparse_to_dense.js","resolved":"/mnt/node_modules/@tensorflow/tfjs-core/dist/ops/sparse_to_dense_util.js"},{"name":"../tensor_util_env","loc":{"line":20,"column":32,"index":884},"parent":"/mnt/node_modules/@tensorflow/tfjs-core/dist/ops/sparse_to_dense.js","resolved":"/mnt/node_modules/@tensorflow/tfjs-core/dist/tensor_util_env.js"},{"name":"../util_base","loc":{"line":21,"column":51,"index":957},"parent":"/mnt/node_modules/@tensorflow/tfjs-core/dist/ops/sparse_to_dense.js","resolved":"/mnt/node_modules/@tensorflow/tfjs-core/dist/util_base.js"},{"name":"./operation","loc":{"line":22,"column":19,"index":992},"parent":"/mnt/node_modules/@tensorflow/tfjs-core/dist/ops/sparse_to_dense.js","resolved":"/mnt/node_modules/@tensorflow/tfjs-core/dist/ops/operation.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.sparseToDense = void 0;\n\nvar _engine = require(\"../engine\");\n\nvar _kernel_names = require(\"../kernel_names\");\n\nvar sparse_to_dense = _interopRequireWildcard(require(\"../ops/sparse_to_dense_util\"));\n\nvar _tensor_util_env = require(\"../tensor_util_env\");\n\nvar _util_base = require(\"../util_base\");\n\nvar _operation = require(\"./operation\");\n\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n/**\n * Converts a sparse representation into a dense tensor.\n *\n * Builds an array dense with shape outputShape such that:\n *\n * // If sparseIndices is scalar\n * dense[i] = (i == sparseIndices ? sparseValues : defaultValue)\n *\n * // If sparseIndices is a vector, then for each i\n * dense[sparseIndices[i]] = sparseValues[i]\n *\n * // If sparseIndices is an n by d matrix, then for each i in [0, n)\n * dense[sparseIndices[i][0], ..., sparseIndices[i][d-1]] = sparseValues[i]\n * All other values in dense are set to defaultValue. If sparseValues is a\n * scalar, all sparse indices are set to this single value.\n *\n * If indices are repeated the final value is summed over all values for those\n * indices.\n *\n * ```js\n * const indices = tf.tensor1d([4, 5, 6, 1, 2, 3], 'int32');\n * const values = tf.tensor1d([10, 11, 12, 13, 14, 15], 'float32');\n * const shape = [8];\n * tf.sparseToDense(indices, values, shape).print();\n * ```\n *\n * @param sparseIndices A 0-D, 1-D, or 2-D Tensor of type int32.\n * sparseIndices[i] contains the complete index where sparseValues[i] will be\n * placed.\n * @param sparseValues A 0-D or 1-D Tensor. Values\n * corresponding to each row of sparseIndices, or a scalar value to be used for\n * all sparse indices.\n * @param outputShape Shape of the dense output tensor. The type is inferred.\n * @param defaultValue Scalar. Value to set for indices not specified in\n * sparseIndices. Defaults to zero.\n *\n * @doc {heading: 'Operations', subheading: 'Normalization'}\n */\nfunction sparseToDense_(sparseIndices, sparseValues, outputShape, defaultValue = 0) {\n  (0, _util_base.assertNonNegativeIntegerDimensions)(outputShape);\n  const $sparseIndices = (0, _tensor_util_env.convertToTensor)(sparseIndices, 'sparseIndices', 'sparseToDense', 'int32');\n  const $sparseValues = (0, _tensor_util_env.convertToTensor)(sparseValues, 'sparseValues', 'sparseToDense', 'string_or_numeric');\n  const $defaultValue = (0, _tensor_util_env.convertToTensor)(defaultValue, 'defaultValue', 'sparseToDense', $sparseValues.dtype);\n  sparse_to_dense.validateInput($sparseIndices, $sparseValues, outputShape, $defaultValue);\n  const inputs = {\n    sparseIndices: $sparseIndices,\n    sparseValues: $sparseValues,\n    defaultValue: $defaultValue\n  };\n  const attrs = {\n    outputShape\n  };\n  return _engine.ENGINE.runKernel(_kernel_names.SparseToDense, inputs, attrs);\n}\n\nconst sparseToDense = /* @__PURE__ */(0, _operation.op)({\n  sparseToDense_\n});\nexports.sparseToDense = sparseToDense;"},"sourceMaps":{"js":{"mappings":[{"source":"../../../../../../tfjs-core/src/ops/sparse_to_dense.ts","name":null,"original":{"line":18,"column":0},"generated":{"line":8,"column":0}},{"source":"../../../../../../tfjs-core/src/ops/sparse_to_dense.ts","name":null,"original":{"line":19,"column":0},"generated":{"line":10,"column":0}},{"source":"../../../../../../tfjs-core/src/ops/sparse_to_dense.ts","name":null,"original":{"line":21,"column":0},"generated":{"line":12,"column":0}},{"source":"../../../../../../tfjs-core/src/ops/sparse_to_dense.ts","name":null,"original":{"line":24,"column":0},"generated":{"line":14,"column":0}},{"source":"../../../../../../tfjs-core/src/ops/sparse_to_dense.ts","name":null,"original":{"line":26,"column":0},"generated":{"line":16,"column":0}},{"source":"../../../../../../tfjs-core/src/ops/sparse_to_dense.ts","name":null,"original":{"line":28,"column":0},"generated":{"line":18,"column":0}},{"source":"../../../../../../tfjs-core/src/ops/sparse_to_dense.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":24,"column":0}},{"source":"../../../../../../tfjs-core/src/ops/sparse_to_dense.ts","name":null,"original":{"line":30,"column":0},"generated":{"line":41,"column":0}},{"source":"../../../../../../tfjs-core/src/ops/sparse_to_dense.ts","name":null,"original":{"line":68,"column":0},"generated":{"line":79,"column":0}},{"source":"../../../../../../tfjs-core/src/ops/sparse_to_dense.ts","name":null,"original":{"line":68,"column":9},"generated":{"line":79,"column":9}},{"source":"../../../../../../tfjs-core/src/ops/sparse_to_dense.ts","name":null,"original":{"line":68,"column":0},"generated":{"line":79,"column":23}},{"source":"../../../../../../tfjs-core/src/ops/sparse_to_dense.ts","name":null,"original":{"line":69,"column":4},"generated":{"line":79,"column":24}},{"source":"../../../../../../tfjs-core/src/ops/sparse_to_dense.ts","name":null,"original":{"line":68,"column":0},"generated":{"line":79,"column":37}},{"source":"../../../../../../tfjs-core/src/ops/sparse_to_dense.ts","name":null,"original":{"line":69,"column":38},"generated":{"line":79,"column":39}},{"source":"../../../../../../tfjs-core/src/ops/sparse_to_dense.ts","name":null,"original":{"line":68,"column":0},"generated":{"line":79,"column":51}},{"source":"../../../../../../tfjs-core/src/ops/sparse_to_dense.ts","name":null,"original":{"line":70,"column":4},"generated":{"line":79,"column":53}},{"source":"../../../../../../tfjs-core/src/ops/sparse_to_dense.ts","name":null,"original":{"line":68,"column":0},"generated":{"line":79,"column":64}},{"source":"../../../../../../tfjs-core/src/ops/sparse_to_dense.ts","name":null,"original":{"line":70,"column":30},"generated":{"line":79,"column":66}},{"source":"../../../../../../tfjs-core/src/ops/sparse_to_dense.ts","name":null,"original":{"line":70,"column":30},"generated":{"line":79,"column":78}},{"source":"../../../../../../tfjs-core/src/ops/sparse_to_dense.ts","name":null,"original":{"line":70,"column":64},"generated":{"line":79,"column":81}},{"source":"../../../../../../tfjs-core/src/ops/sparse_to_dense.ts","name":null,"original":{"line":68,"column":0},"generated":{"line":79,"column":82}},{"source":"../../../../../../tfjs-core/src/ops/sparse_to_dense.ts","name":null,"original":{"line":70,"column":65},"generated":{"line":79,"column":84}},{"source":"../../../../../../tfjs-core/src/ops/sparse_to_dense.ts","name":null,"original":{"line":71,"column":2},"generated":{"line":80,"column":0}},{"source":"../../../../../../tfjs-core/src/ops/sparse_to_dense.ts","name":null,"original":{"line":71,"column":37},"generated":{"line":80,"column":53}},{"source":"../../../../../../tfjs-core/src/ops/sparse_to_dense.ts","name":null,"original":{"line":71,"column":2},"generated":{"line":80,"column":64}},{"source":"../../../../../../tfjs-core/src/ops/sparse_to_dense.ts","name":null,"original":{"line":73,"column":2},"generated":{"line":81,"column":0}},{"source":"../../../../../../tfjs-core/src/ops/sparse_to_dense.ts","name":null,"original":{"line":73,"column":8},"generated":{"line":81,"column":8}},{"source":"../../../../../../tfjs-core/src/ops/sparse_to_dense.ts","name":null,"original":{"line":73,"column":22},"generated":{"line":81,"column":22}},{"source":"../../../../../../tfjs-core/src/ops/sparse_to_dense.ts","name":null,"original":{"line":74,"column":6},"generated":{"line":81,"column":25}},{"source":"../../../../../../tfjs-core/src/ops/sparse_to_dense.ts","name":null,"original":{"line":74,"column":22},"generated":{"line":81,"column":63}},{"source":"../../../../../../tfjs-core/src/ops/sparse_to_dense.ts","name":null,"original":{"line":74,"column":6},"generated":{"line":81,"column":76}},{"source":"../../../../../../tfjs-core/src/ops/sparse_to_dense.ts","name":null,"original":{"line":74,"column":37},"generated":{"line":81,"column":78}},{"source":"../../../../../../tfjs-core/src/ops/sparse_to_dense.ts","name":null,"original":{"line":74,"column":6},"generated":{"line":81,"column":93}},{"source":"../../../../../../tfjs-core/src/ops/sparse_to_dense.ts","name":null,"original":{"line":74,"column":54},"generated":{"line":81,"column":95}},{"source":"../../../../../../tfjs-core/src/ops/sparse_to_dense.ts","name":null,"original":{"line":74,"column":6},"generated":{"line":81,"column":110}},{"source":"../../../../../../tfjs-core/src/ops/sparse_to_dense.ts","name":null,"original":{"line":74,"column":71},"generated":{"line":81,"column":112}},{"source":"../../../../../../tfjs-core/src/ops/sparse_to_dense.ts","name":null,"original":{"line":74,"column":6},"generated":{"line":81,"column":119}},{"source":"../../../../../../tfjs-core/src/ops/sparse_to_dense.ts","name":null,"original":{"line":73,"column":2},"generated":{"line":81,"column":120}},{"source":"../../../../../../tfjs-core/src/ops/sparse_to_dense.ts","name":null,"original":{"line":75,"column":2},"generated":{"line":82,"column":0}},{"source":"../../../../../../tfjs-core/src/ops/sparse_to_dense.ts","name":null,"original":{"line":75,"column":8},"generated":{"line":82,"column":8}},{"source":"../../../../../../tfjs-core/src/ops/sparse_to_dense.ts","name":null,"original":{"line":75,"column":21},"generated":{"line":82,"column":21}},{"source":"../../../../../../tfjs-core/src/ops/sparse_to_dense.ts","name":null,"original":{"line":75,"column":24},"generated":{"line":82,"column":24}},{"source":"../../../../../../tfjs-core/src/ops/sparse_to_dense.ts","name":null,"original":{"line":76,"column":6},"generated":{"line":82,"column":62}},{"source":"../../../../../../tfjs-core/src/ops/sparse_to_dense.ts","name":null,"original":{"line":75,"column":24},"generated":{"line":82,"column":74}},{"source":"../../../../../../tfjs-core/src/ops/sparse_to_dense.ts","name":null,"original":{"line":76,"column":20},"generated":{"line":82,"column":76}},{"source":"../../../../../../tfjs-core/src/ops/sparse_to_dense.ts","name":null,"original":{"line":75,"column":24},"generated":{"line":82,"column":90}},{"source":"../../../../../../tfjs-core/src/ops/sparse_to_dense.ts","name":null,"original":{"line":76,"column":36},"generated":{"line":82,"column":92}},{"source":"../../../../../../tfjs-core/src/ops/sparse_to_dense.ts","name":null,"original":{"line":75,"column":24},"generated":{"line":82,"column":107}},{"source":"../../../../../../tfjs-core/src/ops/sparse_to_dense.ts","name":null,"original":{"line":76,"column":53},"generated":{"line":82,"column":109}},{"source":"../../../../../../tfjs-core/src/ops/sparse_to_dense.ts","name":null,"original":{"line":75,"column":24},"generated":{"line":82,"column":128}},{"source":"../../../../../../tfjs-core/src/ops/sparse_to_dense.ts","name":null,"original":{"line":75,"column":2},"generated":{"line":82,"column":129}},{"source":"../../../../../../tfjs-core/src/ops/sparse_to_dense.ts","name":null,"original":{"line":77,"column":2},"generated":{"line":83,"column":0}},{"source":"../../../../../../tfjs-core/src/ops/sparse_to_dense.ts","name":null,"original":{"line":77,"column":8},"generated":{"line":83,"column":8}},{"source":"../../../../../../tfjs-core/src/ops/sparse_to_dense.ts","name":null,"original":{"line":77,"column":21},"generated":{"line":83,"column":21}},{"source":"../../../../../../tfjs-core/src/ops/sparse_to_dense.ts","name":null,"original":{"line":77,"column":24},"generated":{"line":83,"column":24}},{"source":"../../../../../../tfjs-core/src/ops/sparse_to_dense.ts","name":null,"original":{"line":78,"column":6},"generated":{"line":83,"column":62}},{"source":"../../../../../../tfjs-core/src/ops/sparse_to_dense.ts","name":null,"original":{"line":77,"column":24},"generated":{"line":83,"column":74}},{"source":"../../../../../../tfjs-core/src/ops/sparse_to_dense.ts","name":null,"original":{"line":78,"column":20},"generated":{"line":83,"column":76}},{"source":"../../../../../../tfjs-core/src/ops/sparse_to_dense.ts","name":null,"original":{"line":77,"column":24},"generated":{"line":83,"column":90}},{"source":"../../../../../../tfjs-core/src/ops/sparse_to_dense.ts","name":null,"original":{"line":78,"column":36},"generated":{"line":83,"column":92}},{"source":"../../../../../../tfjs-core/src/ops/sparse_to_dense.ts","name":null,"original":{"line":77,"column":24},"generated":{"line":83,"column":107}},{"source":"../../../../../../tfjs-core/src/ops/sparse_to_dense.ts","name":null,"original":{"line":78,"column":53},"generated":{"line":83,"column":109}},{"source":"../../../../../../tfjs-core/src/ops/sparse_to_dense.ts","name":null,"original":{"line":78,"column":66},"generated":{"line":83,"column":122}},{"source":"../../../../../../tfjs-core/src/ops/sparse_to_dense.ts","name":null,"original":{"line":78,"column":67},"generated":{"line":83,"column":123}},{"source":"../../../../../../tfjs-core/src/ops/sparse_to_dense.ts","name":null,"original":{"line":77,"column":24},"generated":{"line":83,"column":128}},{"source":"../../../../../../tfjs-core/src/ops/sparse_to_dense.ts","name":null,"original":{"line":77,"column":2},"generated":{"line":83,"column":129}},{"source":"../../../../../../tfjs-core/src/ops/sparse_to_dense.ts","name":null,"original":{"line":80,"column":2},"generated":{"line":84,"column":0}},{"source":"../../../../../../tfjs-core/src/ops/sparse_to_dense.ts","name":null,"original":{"line":80,"column":2},"generated":{"line":84,"column":2}},{"source":"../../../../../../tfjs-core/src/ops/sparse_to_dense.ts","name":null,"original":{"line":80,"column":17},"generated":{"line":84,"column":17}},{"source":"../../../../../../tfjs-core/src/ops/sparse_to_dense.ts","name":null,"original":{"line":80,"column":18},"generated":{"line":84,"column":18}},{"source":"../../../../../../tfjs-core/src/ops/sparse_to_dense.ts","name":null,"original":{"line":80,"column":2},"generated":{"line":84,"column":31}},{"source":"../../../../../../tfjs-core/src/ops/sparse_to_dense.ts","name":null,"original":{"line":81,"column":6},"generated":{"line":84,"column":32}},{"source":"../../../../../../tfjs-core/src/ops/sparse_to_dense.ts","name":null,"original":{"line":80,"column":2},"generated":{"line":84,"column":46}},{"source":"../../../../../../tfjs-core/src/ops/sparse_to_dense.ts","name":null,"original":{"line":81,"column":22},"generated":{"line":84,"column":48}},{"source":"../../../../../../tfjs-core/src/ops/sparse_to_dense.ts","name":null,"original":{"line":80,"column":2},"generated":{"line":84,"column":61}},{"source":"../../../../../../tfjs-core/src/ops/sparse_to_dense.ts","name":null,"original":{"line":81,"column":37},"generated":{"line":84,"column":63}},{"source":"../../../../../../tfjs-core/src/ops/sparse_to_dense.ts","name":null,"original":{"line":80,"column":2},"generated":{"line":84,"column":74}},{"source":"../../../../../../tfjs-core/src/ops/sparse_to_dense.ts","name":null,"original":{"line":81,"column":50},"generated":{"line":84,"column":76}},{"source":"../../../../../../tfjs-core/src/ops/sparse_to_dense.ts","name":null,"original":{"line":80,"column":2},"generated":{"line":84,"column":89}},{"source":"../../../../../../tfjs-core/src/ops/sparse_to_dense.ts","name":null,"original":{"line":83,"column":2},"generated":{"line":85,"column":0}},{"source":"../../../../../../tfjs-core/src/ops/sparse_to_dense.ts","name":null,"original":{"line":83,"column":8},"generated":{"line":85,"column":8}},{"source":"../../../../../../tfjs-core/src/ops/sparse_to_dense.ts","name":null,"original":{"line":83,"column":14},"generated":{"line":85,"column":14}},{"source":"../../../../../../tfjs-core/src/ops/sparse_to_dense.ts","name":null,"original":{"line":83,"column":38},"generated":{"line":85,"column":17}},{"source":"../../../../../../tfjs-core/src/ops/sparse_to_dense.ts","name":null,"original":{"line":84,"column":4},"generated":{"line":86,"column":0}},{"source":"../../../../../../tfjs-core/src/ops/sparse_to_dense.ts","name":null,"original":{"line":84,"column":4},"generated":{"line":86,"column":4}},{"source":"../../../../../../tfjs-core/src/ops/sparse_to_dense.ts","name":null,"original":{"line":84,"column":17},"generated":{"line":86,"column":17}},{"source":"../../../../../../tfjs-core/src/ops/sparse_to_dense.ts","name":null,"original":{"line":84,"column":19},"generated":{"line":86,"column":19}},{"source":"../../../../../../tfjs-core/src/ops/sparse_to_dense.ts","name":null,"original":{"line":83,"column":38},"generated":{"line":86,"column":33}},{"source":"../../../../../../tfjs-core/src/ops/sparse_to_dense.ts","name":null,"original":{"line":85,"column":4},"generated":{"line":87,"column":0}},{"source":"../../../../../../tfjs-core/src/ops/sparse_to_dense.ts","name":null,"original":{"line":85,"column":4},"generated":{"line":87,"column":4}},{"source":"../../../../../../tfjs-core/src/ops/sparse_to_dense.ts","name":null,"original":{"line":85,"column":16},"generated":{"line":87,"column":16}},{"source":"../../../../../../tfjs-core/src/ops/sparse_to_dense.ts","name":null,"original":{"line":85,"column":18},"generated":{"line":87,"column":18}},{"source":"../../../../../../tfjs-core/src/ops/sparse_to_dense.ts","name":null,"original":{"line":83,"column":38},"generated":{"line":87,"column":31}},{"source":"../../../../../../tfjs-core/src/ops/sparse_to_dense.ts","name":null,"original":{"line":86,"column":4},"generated":{"line":88,"column":0}},{"source":"../../../../../../tfjs-core/src/ops/sparse_to_dense.ts","name":null,"original":{"line":86,"column":4},"generated":{"line":88,"column":4}},{"source":"../../../../../../tfjs-core/src/ops/sparse_to_dense.ts","name":null,"original":{"line":86,"column":16},"generated":{"line":88,"column":16}},{"source":"../../../../../../tfjs-core/src/ops/sparse_to_dense.ts","name":null,"original":{"line":86,"column":18},"generated":{"line":88,"column":18}},{"source":"../../../../../../tfjs-core/src/ops/sparse_to_dense.ts","name":null,"original":{"line":83,"column":38},"generated":{"line":89,"column":0}},{"source":"../../../../../../tfjs-core/src/ops/sparse_to_dense.ts","name":null,"original":{"line":83,"column":2},"generated":{"line":89,"column":3}},{"source":"../../../../../../tfjs-core/src/ops/sparse_to_dense.ts","name":null,"original":{"line":89,"column":2},"generated":{"line":90,"column":0}},{"source":"../../../../../../tfjs-core/src/ops/sparse_to_dense.ts","name":null,"original":{"line":89,"column":8},"generated":{"line":90,"column":8}},{"source":"../../../../../../tfjs-core/src/ops/sparse_to_dense.ts","name":null,"original":{"line":89,"column":13},"generated":{"line":90,"column":13}},{"source":"../../../../../../tfjs-core/src/ops/sparse_to_dense.ts","name":null,"original":{"line":89,"column":36},"generated":{"line":90,"column":16}},{"source":"../../../../../../tfjs-core/src/ops/sparse_to_dense.ts","name":null,"original":{"line":89,"column":37},"generated":{"line":91,"column":0}},{"source":"../../../../../../tfjs-core/src/ops/sparse_to_dense.ts","name":null,"original":{"line":89,"column":37},"generated":{"line":91,"column":4}},{"source":"../../../../../../tfjs-core/src/ops/sparse_to_dense.ts","name":null,"original":{"line":89,"column":36},"generated":{"line":92,"column":0}},{"source":"../../../../../../tfjs-core/src/ops/sparse_to_dense.ts","name":null,"original":{"line":89,"column":2},"generated":{"line":92,"column":3}},{"source":"../../../../../../tfjs-core/src/ops/sparse_to_dense.ts","name":null,"original":{"line":91,"column":2},"generated":{"line":93,"column":0}},{"source":"../../../../../../tfjs-core/src/ops/sparse_to_dense.ts","name":null,"original":{"line":91,"column":9},"generated":{"line":93,"column":9}},{"source":"../../../../../../tfjs-core/src/ops/sparse_to_dense.ts","name":null,"original":{"line":91,"column":16},"generated":{"line":93,"column":24}},{"source":"../../../../../../tfjs-core/src/ops/sparse_to_dense.ts","name":null,"original":{"line":91,"column":9},"generated":{"line":93,"column":33}},{"source":"../../../../../../tfjs-core/src/ops/sparse_to_dense.ts","name":null,"original":{"line":92,"column":6},"generated":{"line":93,"column":34}},{"source":"../../../../../../tfjs-core/src/ops/sparse_to_dense.ts","name":null,"original":{"line":91,"column":9},"generated":{"line":93,"column":61}},{"source":"../../../../../../tfjs-core/src/ops/sparse_to_dense.ts","name":null,"original":{"line":92,"column":21},"generated":{"line":93,"column":63}},{"source":"../../../../../../tfjs-core/src/ops/sparse_to_dense.ts","name":null,"original":{"line":91,"column":9},"generated":{"line":93,"column":69}},{"source":"../../../../../../tfjs-core/src/ops/sparse_to_dense.ts","name":null,"original":{"line":93,"column":6},"generated":{"line":93,"column":71}},{"source":"../../../../../../tfjs-core/src/ops/sparse_to_dense.ts","name":null,"original":{"line":91,"column":9},"generated":{"line":93,"column":76}},{"source":"../../../../../../tfjs-core/src/ops/sparse_to_dense.ts","name":null,"original":{"line":91,"column":2},"generated":{"line":93,"column":77}},{"source":"../../../../../../tfjs-core/src/ops/sparse_to_dense.ts","name":null,"original":{"line":94,"column":1},"generated":{"line":94,"column":0}},{"source":"../../../../../../tfjs-core/src/ops/sparse_to_dense.ts","name":null,"original":{"line":96,"column":7},"generated":{"line":96,"column":0}},{"source":"../../../../../../tfjs-core/src/ops/sparse_to_dense.ts","name":null,"original":{"line":96,"column":13},"generated":{"line":96,"column":6}},{"source":"../../../../../../tfjs-core/src/ops/sparse_to_dense.ts","name":null,"original":{"line":96,"column":26},"generated":{"line":96,"column":19}},{"source":"../../../../../../tfjs-core/src/ops/sparse_to_dense.ts","name":null,"original":{"line":96,"column":29},"generated":{"line":96,"column":22}},{"source":"../../../../../../tfjs-core/src/ops/sparse_to_dense.ts","name":null,"original":{"line":96,"column":45},"generated":{"line":96,"column":37}},{"source":"../../../../../../tfjs-core/src/ops/sparse_to_dense.ts","name":null,"original":{"line":96,"column":48},"generated":{"line":96,"column":56}},{"source":"../../../../../../tfjs-core/src/ops/sparse_to_dense.ts","name":null,"original":{"line":96,"column":49},"generated":{"line":97,"column":0}},{"source":"../../../../../../tfjs-core/src/ops/sparse_to_dense.ts","name":null,"original":{"line":96,"column":49},"generated":{"line":97,"column":2}},{"source":"../../../../../../tfjs-core/src/ops/sparse_to_dense.ts","name":null,"original":{"line":96,"column":48},"generated":{"line":98,"column":0}},{"source":"../../../../../../tfjs-core/src/ops/sparse_to_dense.ts","name":null,"original":{"line":96,"column":45},"generated":{"line":98,"column":1}},{"source":"../../../../../../tfjs-core/src/ops/sparse_to_dense.ts","name":null,"original":{"line":96,"column":7},"generated":{"line":98,"column":2}}],"sources":{"../../../../../../tfjs-core/src/ops/sparse_to_dense.ts":"/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {ENGINE} from '../engine';\nimport {SparseToDense, SparseToDenseAttrs, SparseToDenseInputs} from '../kernel_names';\nimport {NamedAttrMap} from '../kernel_registry';\nimport * as sparse_to_dense from '../ops/sparse_to_dense_util';\nimport {Scalar, Tensor} from '../tensor';\nimport {NamedTensorMap} from '../tensor_types';\nimport {convertToTensor} from '../tensor_util_env';\nimport {Rank, ScalarLike, ShapeMap, TensorLike} from '../types';\nimport {assertNonNegativeIntegerDimensions} from '../util_base';\n\nimport {op} from './operation';\n\n/**\n * Converts a sparse representation into a dense tensor.\n *\n * Builds an array dense with shape outputShape such that:\n *\n * // If sparseIndices is scalar\n * dense[i] = (i == sparseIndices ? sparseValues : defaultValue)\n *\n * // If sparseIndices is a vector, then for each i\n * dense[sparseIndices[i]] = sparseValues[i]\n *\n * // If sparseIndices is an n by d matrix, then for each i in [0, n)\n * dense[sparseIndices[i][0], ..., sparseIndices[i][d-1]] = sparseValues[i]\n * All other values in dense are set to defaultValue. If sparseValues is a\n * scalar, all sparse indices are set to this single value.\n *\n * If indices are repeated the final value is summed over all values for those\n * indices.\n *\n * ```js\n * const indices = tf.tensor1d([4, 5, 6, 1, 2, 3], 'int32');\n * const values = tf.tensor1d([10, 11, 12, 13, 14, 15], 'float32');\n * const shape = [8];\n * tf.sparseToDense(indices, values, shape).print();\n * ```\n *\n * @param sparseIndices A 0-D, 1-D, or 2-D Tensor of type int32.\n * sparseIndices[i] contains the complete index where sparseValues[i] will be\n * placed.\n * @param sparseValues A 0-D or 1-D Tensor. Values\n * corresponding to each row of sparseIndices, or a scalar value to be used for\n * all sparse indices.\n * @param outputShape Shape of the dense output tensor. The type is inferred.\n * @param defaultValue Scalar. Value to set for indices not specified in\n * sparseIndices. Defaults to zero.\n *\n * @doc {heading: 'Operations', subheading: 'Normalization'}\n */\nfunction sparseToDense_<R extends Rank>(\n    sparseIndices: Tensor|TensorLike, sparseValues: Tensor|TensorLike,\n    outputShape: ShapeMap[R], defaultValue: Scalar|ScalarLike = 0): Tensor<R> {\n  assertNonNegativeIntegerDimensions(outputShape);\n\n  const $sparseIndices =\n      convertToTensor(sparseIndices, 'sparseIndices', 'sparseToDense', 'int32');\n  const $sparseValues = convertToTensor(\n      sparseValues, 'sparseValues', 'sparseToDense', 'string_or_numeric');\n  const $defaultValue = convertToTensor(\n      defaultValue, 'defaultValue', 'sparseToDense', $sparseValues.dtype);\n\n  sparse_to_dense.validateInput(\n      $sparseIndices, $sparseValues, outputShape, $defaultValue);\n\n  const inputs: SparseToDenseInputs = {\n    sparseIndices: $sparseIndices,\n    sparseValues: $sparseValues,\n    defaultValue: $defaultValue\n  };\n\n  const attrs: SparseToDenseAttrs = {outputShape};\n\n  return ENGINE.runKernel(\n      SparseToDense, inputs as unknown as NamedTensorMap,\n      attrs as unknown as NamedAttrMap);\n}\n\nexport const sparseToDense = /* @__PURE__ */ op({sparseToDense_});\n"},"lineCount":null}},"error":null,"hash":"d5094b2b9fc8df94a381f1a5a7fe3ab3","cacheData":{"env":{}}}