{"id":"node_modules/@tensorflow/tfjs-core/dist/ops/split.js","dependencies":[{"name":"/mnt/package.json","includedInParent":true,"mtime":1677113610184},{"name":"/mnt/.babelrc","includedInParent":true,"mtime":1677077576820},{"name":"/mnt/node_modules/@tensorflow/tfjs-core/package.json","includedInParent":true,"mtime":1677113567214},{"name":"../engine","loc":{"line":17,"column":23,"index":726},"parent":"/mnt/node_modules/@tensorflow/tfjs-core/dist/ops/split.js","resolved":"/mnt/node_modules/@tensorflow/tfjs-core/dist/engine.js"},{"name":"../kernel_names","loc":{"line":18,"column":23,"index":762},"parent":"/mnt/node_modules/@tensorflow/tfjs-core/dist/ops/split.js","resolved":"/mnt/node_modules/@tensorflow/tfjs-core/dist/kernel_names.js"},{"name":"../tensor_util_env","loc":{"line":19,"column":32,"index":813},"parent":"/mnt/node_modules/@tensorflow/tfjs-core/dist/ops/split.js","resolved":"/mnt/node_modules/@tensorflow/tfjs-core/dist/tensor_util_env.js"},{"name":"./operation","loc":{"line":20,"column":19,"index":854},"parent":"/mnt/node_modules/@tensorflow/tfjs-core/dist/ops/split.js","resolved":"/mnt/node_modules/@tensorflow/tfjs-core/dist/ops/operation.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.split = void 0;\n\nvar _engine = require(\"../engine\");\n\nvar _kernel_names = require(\"../kernel_names\");\n\nvar _tensor_util_env = require(\"../tensor_util_env\");\n\nvar _operation = require(\"./operation\");\n\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n/**\n * Splits a `tf.Tensor` into sub tensors.\n *\n * If `numOrSizeSplits` is a number, splits `x` along dimension `axis`\n * into `numOrSizeSplits` smaller tensors.\n * Requires that `numOrSizeSplits` evenly divides `x.shape[axis]`.\n *\n * If `numOrSizeSplits` is a number array, splits `x` into\n * `numOrSizeSplits.length` pieces. The shape of the `i`-th piece has the\n * same size as `x` except along dimension `axis` where the size is\n * `numOrSizeSplits[i]`.\n *\n * ```js\n * const x = tf.tensor2d([1, 2, 3, 4, 5, 6, 7, 8], [2, 4]);\n * const [a, b] = tf.split(x, 2, 1);\n * a.print();\n * b.print();\n *\n * const [c, d, e] = tf.split(x, [1, 2, 1], 1);\n * c.print();\n * d.print();\n * e.print();\n * ```\n *\n * @param x The input tensor to split.\n * @param numOrSizeSplits Either an integer indicating the number of\n * splits along the axis or an array of integers containing the sizes of\n * each output tensor along the axis. If a number then it must evenly divide\n * `x.shape[axis]`; otherwise the sum of sizes must match `x.shape[axis]`.\n * Can contain one -1 indicating that dimension is to be inferred.\n * @param axis The dimension along which to split. Defaults to 0 (the first\n * dim).\n *\n * @doc {heading: 'Tensors', subheading: 'Slicing and Joining'}\n */\nfunction split_(x, numOrSizeSplits, axis = 0) {\n  const $x = (0, _tensor_util_env.convertToTensor)(x, 'x', 'split');\n  const inputs = {\n    x: $x\n  };\n  const attr = {\n    numOrSizeSplits,\n    axis\n  };\n  return _engine.ENGINE.runKernel(_kernel_names.SplitV, inputs, attr);\n}\n\nconst split = /* @__PURE__ */(0, _operation.op)({\n  split_\n});\nexports.split = split;"},"sourceMaps":{"js":{"mappings":[{"source":"../../../../../../tfjs-core/src/ops/split.ts","name":null,"original":{"line":17,"column":0},"generated":{"line":8,"column":0}},{"source":"../../../../../../tfjs-core/src/ops/split.ts","name":null,"original":{"line":18,"column":0},"generated":{"line":10,"column":0}},{"source":"../../../../../../tfjs-core/src/ops/split.ts","name":null,"original":{"line":22,"column":0},"generated":{"line":12,"column":0}},{"source":"../../../../../../tfjs-core/src/ops/split.ts","name":null,"original":{"line":25,"column":0},"generated":{"line":14,"column":0}},{"source":"../../../../../../tfjs-core/src/ops/split.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":16,"column":0}},{"source":"../../../../../../tfjs-core/src/ops/split.ts","name":null,"original":{"line":27,"column":0},"generated":{"line":33,"column":0}},{"source":"../../../../../../tfjs-core/src/ops/split.ts","name":null,"original":{"line":62,"column":0},"generated":{"line":68,"column":0}},{"source":"../../../../../../tfjs-core/src/ops/split.ts","name":null,"original":{"line":62,"column":9},"generated":{"line":68,"column":9}},{"source":"../../../../../../tfjs-core/src/ops/split.ts","name":null,"original":{"line":62,"column":0},"generated":{"line":68,"column":15}},{"source":"../../../../../../tfjs-core/src/ops/split.ts","name":null,"original":{"line":63,"column":4},"generated":{"line":68,"column":16}},{"source":"../../../../../../tfjs-core/src/ops/split.ts","name":null,"original":{"line":62,"column":0},"generated":{"line":68,"column":17}},{"source":"../../../../../../tfjs-core/src/ops/split.ts","name":null,"original":{"line":63,"column":26},"generated":{"line":68,"column":19}},{"source":"../../../../../../tfjs-core/src/ops/split.ts","name":null,"original":{"line":62,"column":0},"generated":{"line":68,"column":34}},{"source":"../../../../../../tfjs-core/src/ops/split.ts","name":null,"original":{"line":63,"column":60},"generated":{"line":68,"column":36}},{"source":"../../../../../../tfjs-core/src/ops/split.ts","name":null,"original":{"line":63,"column":64},"generated":{"line":68,"column":40}},{"source":"../../../../../../tfjs-core/src/ops/split.ts","name":null,"original":{"line":63,"column":67},"generated":{"line":68,"column":43}},{"source":"../../../../../../tfjs-core/src/ops/split.ts","name":null,"original":{"line":62,"column":0},"generated":{"line":68,"column":44}},{"source":"../../../../../../tfjs-core/src/ops/split.ts","name":null,"original":{"line":63,"column":68},"generated":{"line":68,"column":46}},{"source":"../../../../../../tfjs-core/src/ops/split.ts","name":null,"original":{"line":64,"column":2},"generated":{"line":69,"column":0}},{"source":"../../../../../../tfjs-core/src/ops/split.ts","name":null,"original":{"line":64,"column":8},"generated":{"line":69,"column":8}},{"source":"../../../../../../tfjs-core/src/ops/split.ts","name":null,"original":{"line":64,"column":10},"generated":{"line":69,"column":10}},{"source":"../../../../../../tfjs-core/src/ops/split.ts","name":null,"original":{"line":64,"column":13},"generated":{"line":69,"column":13}},{"source":"../../../../../../tfjs-core/src/ops/split.ts","name":null,"original":{"line":64,"column":29},"generated":{"line":69,"column":51}},{"source":"../../../../../../tfjs-core/src/ops/split.ts","name":null,"original":{"line":64,"column":13},"generated":{"line":69,"column":52}},{"source":"../../../../../../tfjs-core/src/ops/split.ts","name":null,"original":{"line":64,"column":32},"generated":{"line":69,"column":54}},{"source":"../../../../../../tfjs-core/src/ops/split.ts","name":null,"original":{"line":64,"column":13},"generated":{"line":69,"column":57}},{"source":"../../../../../../tfjs-core/src/ops/split.ts","name":null,"original":{"line":64,"column":37},"generated":{"line":69,"column":59}},{"source":"../../../../../../tfjs-core/src/ops/split.ts","name":null,"original":{"line":64,"column":13},"generated":{"line":69,"column":66}},{"source":"../../../../../../tfjs-core/src/ops/split.ts","name":null,"original":{"line":64,"column":2},"generated":{"line":69,"column":67}},{"source":"../../../../../../tfjs-core/src/ops/split.ts","name":null,"original":{"line":66,"column":2},"generated":{"line":70,"column":0}},{"source":"../../../../../../tfjs-core/src/ops/split.ts","name":null,"original":{"line":66,"column":8},"generated":{"line":70,"column":8}},{"source":"../../../../../../tfjs-core/src/ops/split.ts","name":null,"original":{"line":66,"column":14},"generated":{"line":70,"column":14}},{"source":"../../../../../../tfjs-core/src/ops/split.ts","name":null,"original":{"line":66,"column":31},"generated":{"line":70,"column":17}},{"source":"../../../../../../tfjs-core/src/ops/split.ts","name":null,"original":{"line":66,"column":32},"generated":{"line":71,"column":0}},{"source":"../../../../../../tfjs-core/src/ops/split.ts","name":null,"original":{"line":66,"column":32},"generated":{"line":71,"column":4}},{"source":"../../../../../../tfjs-core/src/ops/split.ts","name":null,"original":{"line":66,"column":33},"generated":{"line":71,"column":5}},{"source":"../../../../../../tfjs-core/src/ops/split.ts","name":null,"original":{"line":66,"column":35},"generated":{"line":71,"column":7}},{"source":"../../../../../../tfjs-core/src/ops/split.ts","name":null,"original":{"line":66,"column":31},"generated":{"line":72,"column":0}},{"source":"../../../../../../tfjs-core/src/ops/split.ts","name":null,"original":{"line":66,"column":2},"generated":{"line":72,"column":3}},{"source":"../../../../../../tfjs-core/src/ops/split.ts","name":null,"original":{"line":67,"column":2},"generated":{"line":73,"column":0}},{"source":"../../../../../../tfjs-core/src/ops/split.ts","name":null,"original":{"line":67,"column":8},"generated":{"line":73,"column":8}},{"source":"../../../../../../tfjs-core/src/ops/split.ts","name":null,"original":{"line":67,"column":12},"generated":{"line":73,"column":12}},{"source":"../../../../../../tfjs-core/src/ops/split.ts","name":null,"original":{"line":67,"column":28},"generated":{"line":73,"column":15}},{"source":"../../../../../../tfjs-core/src/ops/split.ts","name":null,"original":{"line":67,"column":29},"generated":{"line":74,"column":0}},{"source":"../../../../../../tfjs-core/src/ops/split.ts","name":null,"original":{"line":67,"column":29},"generated":{"line":74,"column":4}},{"source":"../../../../../../tfjs-core/src/ops/split.ts","name":null,"original":{"line":67,"column":28},"generated":{"line":74,"column":19}},{"source":"../../../../../../tfjs-core/src/ops/split.ts","name":null,"original":{"line":67,"column":46},"generated":{"line":75,"column":0}},{"source":"../../../../../../tfjs-core/src/ops/split.ts","name":null,"original":{"line":67,"column":46},"generated":{"line":75,"column":4}},{"source":"../../../../../../tfjs-core/src/ops/split.ts","name":null,"original":{"line":67,"column":28},"generated":{"line":76,"column":0}},{"source":"../../../../../../tfjs-core/src/ops/split.ts","name":null,"original":{"line":67,"column":2},"generated":{"line":76,"column":3}},{"source":"../../../../../../tfjs-core/src/ops/split.ts","name":null,"original":{"line":69,"column":2},"generated":{"line":77,"column":0}},{"source":"../../../../../../tfjs-core/src/ops/split.ts","name":null,"original":{"line":69,"column":9},"generated":{"line":77,"column":9}},{"source":"../../../../../../tfjs-core/src/ops/split.ts","name":null,"original":{"line":69,"column":16},"generated":{"line":77,"column":24}},{"source":"../../../../../../tfjs-core/src/ops/split.ts","name":null,"original":{"line":69,"column":9},"generated":{"line":77,"column":33}},{"source":"../../../../../../tfjs-core/src/ops/split.ts","name":null,"original":{"line":70,"column":13},"generated":{"line":77,"column":34}},{"source":"../../../../../../tfjs-core/src/ops/split.ts","name":null,"original":{"line":69,"column":9},"generated":{"line":77,"column":54}},{"source":"../../../../../../tfjs-core/src/ops/split.ts","name":null,"original":{"line":70,"column":21},"generated":{"line":77,"column":56}},{"source":"../../../../../../tfjs-core/src/ops/split.ts","name":null,"original":{"line":69,"column":9},"generated":{"line":77,"column":62}},{"source":"../../../../../../tfjs-core/src/ops/split.ts","name":null,"original":{"line":71,"column":13},"generated":{"line":77,"column":64}},{"source":"../../../../../../tfjs-core/src/ops/split.ts","name":null,"original":{"line":69,"column":9},"generated":{"line":77,"column":68}},{"source":"../../../../../../tfjs-core/src/ops/split.ts","name":null,"original":{"line":69,"column":2},"generated":{"line":77,"column":69}},{"source":"../../../../../../tfjs-core/src/ops/split.ts","name":null,"original":{"line":72,"column":1},"generated":{"line":78,"column":0}},{"source":"../../../../../../tfjs-core/src/ops/split.ts","name":null,"original":{"line":74,"column":7},"generated":{"line":80,"column":0}},{"source":"../../../../../../tfjs-core/src/ops/split.ts","name":null,"original":{"line":74,"column":13},"generated":{"line":80,"column":6}},{"source":"../../../../../../tfjs-core/src/ops/split.ts","name":null,"original":{"line":74,"column":18},"generated":{"line":80,"column":11}},{"source":"../../../../../../tfjs-core/src/ops/split.ts","name":null,"original":{"line":74,"column":21},"generated":{"line":80,"column":14}},{"source":"../../../../../../tfjs-core/src/ops/split.ts","name":null,"original":{"line":74,"column":37},"generated":{"line":80,"column":29}},{"source":"../../../../../../tfjs-core/src/ops/split.ts","name":null,"original":{"line":74,"column":40},"generated":{"line":80,"column":48}},{"source":"../../../../../../tfjs-core/src/ops/split.ts","name":null,"original":{"line":74,"column":41},"generated":{"line":81,"column":0}},{"source":"../../../../../../tfjs-core/src/ops/split.ts","name":null,"original":{"line":74,"column":41},"generated":{"line":81,"column":2}},{"source":"../../../../../../tfjs-core/src/ops/split.ts","name":null,"original":{"line":74,"column":40},"generated":{"line":82,"column":0}},{"source":"../../../../../../tfjs-core/src/ops/split.ts","name":null,"original":{"line":74,"column":37},"generated":{"line":82,"column":1}},{"source":"../../../../../../tfjs-core/src/ops/split.ts","name":null,"original":{"line":74,"column":7},"generated":{"line":82,"column":2}}],"sources":{"../../../../../../tfjs-core/src/ops/split.ts":"/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport {ENGINE} from '../engine';\nimport {SplitV, SplitVAttrs, SplitVInputs} from '../kernel_names';\nimport {NamedAttrMap} from '../kernel_registry';\nimport {Tensor} from '../tensor';\nimport {NamedTensorMap} from '../tensor_types';\nimport {convertToTensor} from '../tensor_util_env';\nimport {TensorLike} from '../types';\n\nimport {op} from './operation';\n\n/**\n * Splits a `tf.Tensor` into sub tensors.\n *\n * If `numOrSizeSplits` is a number, splits `x` along dimension `axis`\n * into `numOrSizeSplits` smaller tensors.\n * Requires that `numOrSizeSplits` evenly divides `x.shape[axis]`.\n *\n * If `numOrSizeSplits` is a number array, splits `x` into\n * `numOrSizeSplits.length` pieces. The shape of the `i`-th piece has the\n * same size as `x` except along dimension `axis` where the size is\n * `numOrSizeSplits[i]`.\n *\n * ```js\n * const x = tf.tensor2d([1, 2, 3, 4, 5, 6, 7, 8], [2, 4]);\n * const [a, b] = tf.split(x, 2, 1);\n * a.print();\n * b.print();\n *\n * const [c, d, e] = tf.split(x, [1, 2, 1], 1);\n * c.print();\n * d.print();\n * e.print();\n * ```\n *\n * @param x The input tensor to split.\n * @param numOrSizeSplits Either an integer indicating the number of\n * splits along the axis or an array of integers containing the sizes of\n * each output tensor along the axis. If a number then it must evenly divide\n * `x.shape[axis]`; otherwise the sum of sizes must match `x.shape[axis]`.\n * Can contain one -1 indicating that dimension is to be inferred.\n * @param axis The dimension along which to split. Defaults to 0 (the first\n * dim).\n *\n * @doc {heading: 'Tensors', subheading: 'Slicing and Joining'}\n */\nfunction split_<T extends Tensor>(\n    x: Tensor|TensorLike, numOrSizeSplits: number[]|number, axis = 0): T[] {\n  const $x = convertToTensor(x, 'x', 'split');\n\n  const inputs: SplitVInputs = {x: $x};\n  const attr: SplitVAttrs = {numOrSizeSplits, axis};\n\n  return ENGINE.runKernel(\n             SplitV, inputs as unknown as NamedTensorMap,\n             attr as unknown as NamedAttrMap) as unknown as T[];\n}\n\nexport const split = /* @__PURE__ */ op({split_});\n"},"lineCount":null}},"error":null,"hash":"d205ec83e69670e81ecfd3658d75b2a2","cacheData":{"env":{}}}